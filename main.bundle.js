(()=>{"use strict";var n={317:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),r=t(645),a=t.n(r)()(i());a.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tvertical-align: baseline;\n\tfont-family: inherit;\n\tfont-size: inherit;\n}\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n","",{version:3,sources:["webpack://./src/styles/0-reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,wBAAwB;CACxB,oBAAoB;CACpB,kBAAkB;AACnB;AACA;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tvertical-align: baseline;\n\tfont-family: inherit;\n\tfont-size: inherit;\n}\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n"],sourceRoot:""}]);const s=a},930:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),r=t(645),a=t.n(r)()(i());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);"]),a.push([n.id,"* {\n  font-family: 'Roboto', sans-serif;\n  box-sizing: border-box;\n  font-weight: 200;\n  color: black;\n}\n\nbody {\n  height: 100vh;\n}\n\nh1 {\n  font-size: 32px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 600;\n}\n\nh2 {\n  font-size: 18px;\n  font-weight: 400;\n}\n\nbutton {\n  background: none;\n  border: none;\n  width: 30px;\n  height: 30px;\n  font-size: 24px;\n  font-weight: 600;\n  padding: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 50%;\n}\n\nbutton:hover {\n  background: lightgreen;\n  color: black;\n}","",{version:3,sources:["webpack://./src/styles/0-style.css"],names:[],mappings:"AAEA;EACE,iCAAiC;EACjC,sBAAsB;EACtB,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,iCAAiC;EACjC,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;EACtB,YAAY;AACd",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\n\n* {\n  font-family: 'Roboto', sans-serif;\n  box-sizing: border-box;\n  font-weight: 200;\n  color: black;\n}\n\nbody {\n  height: 100vh;\n}\n\nh1 {\n  font-size: 32px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 600;\n}\n\nh2 {\n  font-size: 18px;\n  font-weight: 400;\n}\n\nbutton {\n  background: none;\n  border: none;\n  width: 30px;\n  height: 30px;\n  font-size: 24px;\n  font-weight: 600;\n  padding: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 50%;\n}\n\nbutton:hover {\n  background: lightgreen;\n  color: black;\n}"],sourceRoot:""}]);const s=a},365:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),r=t(645),a=t.n(r)()(i());a.push([n.id,'header {\n    height: 10%;\n    display: flex;\n    justify-content: space-between;\n    padding: 30px;\n    background-color: rgb(211, 255, 211);\n}\n\ninput[type="date"] {\n    background-color: rgb(211, 255, 211);\n    font-weight: 600;\n    font-size: 16px;\n    padding: 5px;\n    border: 1px solid rgb(211, 255, 211);\n    appearance: none;\n    border-radius: 10px;\n    text-rendering: none;\n}',"",{version:3,sources:["webpack://./src/styles/header/header.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,aAAa;IACb,8BAA8B;IAC9B,aAAa;IACb,oCAAoC;AACxC;;AAEA;IACI,oCAAoC;IACpC,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,oCAAoC;IACpC,gBAAgB;IAChB,mBAAmB;IACnB,oBAAoB;AACxB",sourcesContent:['header {\n    height: 10%;\n    display: flex;\n    justify-content: space-between;\n    padding: 30px;\n    background-color: rgb(211, 255, 211);\n}\n\ninput[type="date"] {\n    background-color: rgb(211, 255, 211);\n    font-weight: 600;\n    font-size: 16px;\n    padding: 5px;\n    border: 1px solid rgb(211, 255, 211);\n    appearance: none;\n    border-radius: 10px;\n    text-rendering: none;\n}'],sourceRoot:""}]);const s=a},149:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),r=t(645),a=t.n(r)()(i());a.push([n.id,"main {\n    display: flex;\n    height: 90%;\n    width: 100%;\n  }","",{version:3,sources:["webpack://./src/styles/main/0-main.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,WAAW;IACX,WAAW;EACb",sourcesContent:["main {\n    display: flex;\n    height: 90%;\n    width: 100%;\n  }"],sourceRoot:""}]);const s=a},295:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),r=t(645),a=t.n(r)()(i());a.push([n.id,"/* sidebar */\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    padding: 30px 60px 0 60px;\n    height: 100%;\n    gap: 10px;\n  }\n  \n  .sidebar-wrappers {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n  \n  .sidebar-wrappers img {\n    width: 24px;\n  }\n  \n  .add-list-btn {\n    align-self: center;\n    width: 60px;\n    height: 60px;\n    font-size: 40px;\n  }","",{version:3,sources:["webpack://./src/styles/main/1-sidebar.css"],names:[],mappings:"AAAA,YAAY;AACZ;IACI,aAAa;IACb,sBAAsB;IACtB,yBAAyB;IACzB,YAAY;IACZ,SAAS;EACX;;EAEA;IACE,aAAa;IACb,mBAAmB;IACnB,SAAS;EACX;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,eAAe;EACjB",sourcesContent:["/* sidebar */\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    padding: 30px 60px 0 60px;\n    height: 100%;\n    gap: 10px;\n  }\n  \n  .sidebar-wrappers {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n  \n  .sidebar-wrappers img {\n    width: 24px;\n  }\n  \n  .add-list-btn {\n    align-self: center;\n    width: 60px;\n    height: 60px;\n    font-size: 40px;\n  }"],sourceRoot:""}]);const s=a},71:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),i=t.n(o),r=t(645),a=t.n(r)()(i());a.push([n.id,".lists-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  padding: 30px;\n  background-color: lightcyan;\n  width: 100%;\n  overflow: auto;\n}\n\n.list {\n  background: rgb(211, 255, 211);\n  width: 50%;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.list-header {\n  display: flex;\n  align-items: center;\n  gap: 25px;\n  position: relative;\n  background-color: rgb(195, 232, 195);\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  padding: 15px;\n}\n\n.del-list-btn {\n  display: flex;\n  width: 55px;\n  height: 55px;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  right: 5px;\n}\n\n.sublist-wrapper {\n  padding: 5px 15px 25px 45px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  position: relative;\n}\n\n.list-checkmark {\n  border: 1px solid gray;\n  border-radius: 50%;\n  color: lightcyan;\n}\n\n.list-checkmark:hover {\n  color: black;\n  background: none;\n}\n\n.sublist-checkmark {\n  width: 24px;\n  height: 24px;\n  font-size: 20px;\n}\n\n.sublist {\n  padding: 5px 10px 5px 10px;\n  width: 60%;\n  border: none;\n  background: none;\n  border-bottom: 1px solid black;\n  color: black;\n  font-weight: 300;\n  cursor: pointer;\n  line-height: 25px;\n}\n\n.sublist[contenteditable]:empty::before {\n  font-weight: 100;\n  color: black;\n}\n\n.sublist-desc[contenteditable]:empty::before {\n  content: 'Click to edit sublist';\n}\n\n.sublist-time {\n  width: 15%;\n}\n\n.sublist-time[contenteditable]:empty::before {\n  content: '8:00 PM';\n}\n\n.sublist-duration {\n  width: 15%;\n}\n\n.sublist-duration[contenteditable]:empty::before {\n  content: '1h 30m';\n}\n\n.sublist-wrapper > *:last-child {\n  font-size: 16px;\n}\n\n.list-header h1[contenteditable] {\n  cursor: pointer;\n  padding: 5px;\n  color: black;\n}\n\n.list-header h1[contenteditable]:empty::before {\n  content: 'Click to edit list';\n  color: gray;\n}","",{version:3,sources:["webpack://./src/styles/main/2-lists.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,aAAa;EACb,2BAA2B;EAC3B,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,8BAA8B;EAC9B,UAAU;EACV,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,kBAAkB;EAClB,oCAAoC;EACpC,4BAA4B;EAC5B,6BAA6B;EAC7B,aAAa;AACf;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,2BAA2B;EAC3B,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;EACtB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,0BAA0B;EAC1B,UAAU;EACV,YAAY;EACZ,gBAAgB;EAChB,8BAA8B;EAC9B,YAAY;EACZ,gBAAgB;EAChB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,6BAA6B;EAC7B,WAAW;AACb",sourcesContent:[".lists-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  padding: 30px;\n  background-color: lightcyan;\n  width: 100%;\n  overflow: auto;\n}\n\n.list {\n  background: rgb(211, 255, 211);\n  width: 50%;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.list-header {\n  display: flex;\n  align-items: center;\n  gap: 25px;\n  position: relative;\n  background-color: rgb(195, 232, 195);\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  padding: 15px;\n}\n\n.del-list-btn {\n  display: flex;\n  width: 55px;\n  height: 55px;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  right: 5px;\n}\n\n.sublist-wrapper {\n  padding: 5px 15px 25px 45px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  position: relative;\n}\n\n.list-checkmark {\n  border: 1px solid gray;\n  border-radius: 50%;\n  color: lightcyan;\n}\n\n.list-checkmark:hover {\n  color: black;\n  background: none;\n}\n\n.sublist-checkmark {\n  width: 24px;\n  height: 24px;\n  font-size: 20px;\n}\n\n.sublist {\n  padding: 5px 10px 5px 10px;\n  width: 60%;\n  border: none;\n  background: none;\n  border-bottom: 1px solid black;\n  color: black;\n  font-weight: 300;\n  cursor: pointer;\n  line-height: 25px;\n}\n\n.sublist[contenteditable]:empty::before {\n  font-weight: 100;\n  color: black;\n}\n\n.sublist-desc[contenteditable]:empty::before {\n  content: 'Click to edit sublist';\n}\n\n.sublist-time {\n  width: 15%;\n}\n\n.sublist-time[contenteditable]:empty::before {\n  content: '8:00 PM';\n}\n\n.sublist-duration {\n  width: 15%;\n}\n\n.sublist-duration[contenteditable]:empty::before {\n  content: '1h 30m';\n}\n\n.sublist-wrapper > *:last-child {\n  font-size: 16px;\n}\n\n.list-header h1[contenteditable] {\n  cursor: pointer;\n  padding: 5px;\n  color: black;\n}\n\n.list-header h1[contenteditable]:empty::before {\n  content: 'Click to edit list';\n  color: gray;\n}"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&a[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},a=[],s=0;s<n.length;s++){var A=n[s],c=o.base?A[0]+o.base:A[0],l=r[c]||0,d="".concat(c," ").concat(l);r[c]=l+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var b=i(u,o);o.byIndex=s,e.splice(s,0,{identifier:d,updater:b,references:1})}a.push(d)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var s=t(r[a]);e[s].references--}for(var A=o(n,i),c=0;c<r.length;c++){var l=t(r[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},762:(n,e,t)=>{n.exports=t.p+"1c3c81d65eec935dee14.svg"}},e={};function t(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(762);const e=e=>{const t=new Image;t.src=n,e.appendChild(t)},o=n=>{const e=document.createElement("h2");e.innerText="Today",n.appendChild(e)},i=e=>{const t=new Image;t.src=n,e.appendChild(t)},r=n=>{const e=document.createElement("h2");e.innerText="Tomorrow",n.appendChild(e)},a=n=>{n.path[1].remove()},s=n=>{const e=document.createElement("div");e.classList.add("sublist-wrapper"),A(e),c(e),l(e),d(e),p(e),n.appendChild(e)},A=n=>{const e=document.createElement("button");e.classList.add("sublist-checkmark","list-checkmark"),e.innerHTML="&#10004;",n.appendChild(e)},c=n=>{const e=document.createElement("p");e.classList.add("sublist","sublist-desc"),e.setAttribute("contenteditable",""),n.appendChild(e)},l=n=>{const e=document.createElement("p");e.classList.add("sublist","sublist-time"),e.setAttribute("contenteditable",""),n.appendChild(e)},d=n=>{const e=document.createElement("p");e.classList.add("sublist","sublist-duration"),e.setAttribute("contenteditable",""),n.appendChild(e)},p=n=>{const e=document.createElement("button");e.innerHTML="&#10060;",e.addEventListener("click",a),n.appendChild(e)},u=n=>{const e=n.path[2];s(e)},b=n=>{n.path[2].remove()},C=n=>{const e=document.createElement("div");e.classList.add("list"),(n=>{const e=document.createElement("div");e.classList.add("list-header"),(n=>{const e=document.createElement("button");e.classList.add("list-checkmark"),e.innerHTML="&#10004;",n.appendChild(e)})(e),(n=>{const e=document.createElement("h1");e.setAttribute("contenteditable",""),n.appendChild(e)})(e),(n=>{const e=document.createElement("button");e.classList.add("add-sublist-btn"),e.innerText="+",e.addEventListener("click",u),n.appendChild(e)})(e),(n=>{const e=document.createElement("button");e.classList.add("del-list-btn"),e.innerHTML="&#10060;",e.addEventListener("click",b),n.appendChild(e)})(e),n.appendChild(e)})(e),s(e),n.appendChild(e)};var h=t(379),m=t.n(h),g=t(795),f=t.n(g),E=t(569),B=t.n(E),x=t(565),y=t.n(x),v=t(216),k=t.n(v),w=t(589),I=t.n(w),Z=t(317),T={};T.styleTagTransform=I(),T.setAttributes=y(),T.insert=B().bind(null,"head"),T.domAPI=f(),T.insertStyleElement=k(),m()(Z.Z,T),Z.Z&&Z.Z.locals&&Z.Z.locals;var Y=t(930),S={};S.styleTagTransform=I(),S.setAttributes=y(),S.insert=B().bind(null,"head"),S.domAPI=f(),S.insertStyleElement=k(),m()(Y.Z,S),Y.Z&&Y.Z.locals&&Y.Z.locals;var L=t(365),j={};j.styleTagTransform=I(),j.setAttributes=y(),j.insert=B().bind(null,"head"),j.domAPI=f(),j.insertStyleElement=k(),m()(L.Z,j),L.Z&&L.Z.locals&&L.Z.locals;var z=t(149),W={};W.styleTagTransform=I(),W.setAttributes=y(),W.insert=B().bind(null,"head"),W.domAPI=f(),W.insertStyleElement=k(),m()(z.Z,W),z.Z&&z.Z.locals&&z.Z.locals;var q=t(295),R={};R.styleTagTransform=I(),R.setAttributes=y(),R.insert=B().bind(null,"head"),R.domAPI=f(),R.insertStyleElement=k(),m()(q.Z,R),q.Z&&q.Z.locals&&q.Z.locals;var U=t(71),M={};M.styleTagTransform=I(),M.setAttributes=y(),M.insert=B().bind(null,"head"),M.domAPI=f(),M.insertStyleElement=k(),m()(U.Z,M),U.Z&&U.Z.locals&&U.Z.locals,(()=>{const n=document.createElement("header");(n=>{const e=document.createElement("h1");e.classList.add("title"),e.innerText="Lista",n.appendChild(e)})(n),(n=>{const e=document.createElement("input");e.setAttribute("type","date"),n.appendChild(e)})(n),document.body.appendChild(n)})(),(()=>{const n=document.createElement("main");(n=>{const t=document.createElement("div");t.classList.add("sidebar"),(n=>{const t=document.createElement("div");t.classList.add("today-wrapper","sidebar-wrappers"),e(t),o(t),n.appendChild(t)})(t),(n=>{const e=document.createElement("div");e.classList.add("tom-wrapper","sidebar-wrappers"),i(e),r(e),n.appendChild(e)})(t),(n=>{const e=document.createElement("button");e.classList.add("add-list-btn"),e.innerText="+",n.appendChild(e)})(t),n.appendChild(t)})(n),(n=>{const e=document.createElement("div");e.classList.add("lists-wrapper"),C(e),n.appendChild(e)})(n),document.body.appendChild(n)})(),(()=>{const n=document.querySelector(".add-list-btn"),e=document.querySelector(".lists-wrapper");n.addEventListener("click",(()=>C(e)))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(()=>{"use strict";var n={317:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),s=t(645),i=t.n(s)()(o());i.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tvertical-align: baseline;\n\tfont-family: inherit;\n\tfont-size: inherit;\n}\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n","",{version:3,sources:["webpack://./src/styles/0-reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,wBAAwB;CACxB,oBAAoB;CACpB,kBAAkB;AACnB;AACA;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tvertical-align: baseline;\n\tfont-family: inherit;\n\tfont-size: inherit;\n}\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n"],sourceRoot:""}]);const a=i},930:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),s=t(645),i=t.n(s)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);"]),i.push([n.id,":root {\n  --easygreen: rgb(211, 255, 211);\n  --mediumgreen: rgb(195, 232, 195);\n  --hardgreen: rgb(146, 211, 146);\n  --ultragreen: rgb(124, 204, 124);\n}\n\n* {\n  font-family: 'Roboto', sans-serif;\n  box-sizing: border-box;\n  font-weight: 200;\n  color: black;\n}\n\nbody {\n  height: 100vh;\n}\n\nh1 {\n  font-size: 32px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 600;\n}\n\nh2 {\n  font-size: 18px;\n  font-weight: 400;\n}\n\nbutton {\n  background: none;\n  border: none;\n  width: 30px;\n  height: 30px;\n  font-size: 24px;\n  font-weight: 600;\n  padding: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 50%;\n}\n\nbutton:hover {\n  background: var(--ultragreen);\n  color: black;\n}","",{version:3,sources:["webpack://./src/styles/0-style.css"],names:[],mappings:"AAEA;EACE,+BAA+B;EAC/B,iCAAiC;EACjC,+BAA+B;EAC/B,gCAAgC;AAClC;;AAEA;EACE,iCAAiC;EACjC,sBAAsB;EACtB,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,iCAAiC;EACjC,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;EAC7B,YAAY;AACd",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\n\n:root {\n  --easygreen: rgb(211, 255, 211);\n  --mediumgreen: rgb(195, 232, 195);\n  --hardgreen: rgb(146, 211, 146);\n  --ultragreen: rgb(124, 204, 124);\n}\n\n* {\n  font-family: 'Roboto', sans-serif;\n  box-sizing: border-box;\n  font-weight: 200;\n  color: black;\n}\n\nbody {\n  height: 100vh;\n}\n\nh1 {\n  font-size: 32px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 600;\n}\n\nh2 {\n  font-size: 18px;\n  font-weight: 400;\n}\n\nbutton {\n  background: none;\n  border: none;\n  width: 30px;\n  height: 30px;\n  font-size: 24px;\n  font-weight: 600;\n  padding: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 50%;\n}\n\nbutton:hover {\n  background: var(--ultragreen);\n  color: black;\n}"],sourceRoot:""}]);const a=i},365:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),s=t(645),i=t.n(s)()(o());i.push([n.id,'header {\n    height: 10%;\n    display: flex;\n    justify-content: space-between;\n    padding: 30px;\n    background-color: var(--easygreen);\n}\n\ninput[type="date"] {\n    background-color: var(--easygreen);\n    font-weight: 600;\n    font-size: 16px;\n    padding: 5px;\n    border: none;\n    appearance: none;\n    border-radius: 10px;\n    text-rendering: none;\n}',"",{version:3,sources:["webpack://./src/styles/header/header.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,aAAa;IACb,8BAA8B;IAC9B,aAAa;IACb,kCAAkC;AACtC;;AAEA;IACI,kCAAkC;IAClC,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,YAAY;IACZ,gBAAgB;IAChB,mBAAmB;IACnB,oBAAoB;AACxB",sourcesContent:['header {\n    height: 10%;\n    display: flex;\n    justify-content: space-between;\n    padding: 30px;\n    background-color: var(--easygreen);\n}\n\ninput[type="date"] {\n    background-color: var(--easygreen);\n    font-weight: 600;\n    font-size: 16px;\n    padding: 5px;\n    border: none;\n    appearance: none;\n    border-radius: 10px;\n    text-rendering: none;\n}'],sourceRoot:""}]);const a=i},149:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),s=t(645),i=t.n(s)()(o());i.push([n.id,"main {\n    display: flex;\n    height: 90%;\n    width: 100%;\n  }","",{version:3,sources:["webpack://./src/styles/main/0-main.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,WAAW;IACX,WAAW;EACb",sourcesContent:["main {\n    display: flex;\n    height: 90%;\n    width: 100%;\n  }"],sourceRoot:""}]);const a=i},295:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),s=t(645),i=t.n(s)()(o());i.push([n.id,"/* sidebar */\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    padding: 30px 60px 0 60px;\n    height: 100%;\n    gap: 10px;\n  }\n  \n  .sidebar-wrappers {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n  \n  .sidebar-wrappers img {\n    width: 24px;\n  }\n  \n  .add-list-btn {\n    align-self: center;\n    width: 60px;\n    height: 60px;\n    font-size: 40px;\n  }","",{version:3,sources:["webpack://./src/styles/main/1-sidebar.css"],names:[],mappings:"AAAA,YAAY;AACZ;IACI,aAAa;IACb,sBAAsB;IACtB,yBAAyB;IACzB,YAAY;IACZ,SAAS;EACX;;EAEA;IACE,aAAa;IACb,mBAAmB;IACnB,SAAS;EACX;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,eAAe;EACjB",sourcesContent:["/* sidebar */\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    padding: 30px 60px 0 60px;\n    height: 100%;\n    gap: 10px;\n  }\n  \n  .sidebar-wrappers {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n  \n  .sidebar-wrappers img {\n    width: 24px;\n  }\n  \n  .add-list-btn {\n    align-self: center;\n    width: 60px;\n    height: 60px;\n    font-size: 40px;\n  }"],sourceRoot:""}]);const a=i},71:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),s=t(645),i=t.n(s)()(o());i.push([n.id,".lists-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  padding: 30px;\n  background-color: lightcyan;\n  width: 100%;\n  overflow: auto;\n}\n\n.list {\n  background: rgb(211, 255, 211);\n  width: 50%;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.list-header {\n  display: flex;\n  align-items: center;\n  gap: 25px;\n  position: relative;\n  background-color: var(--mediumgreen);\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  padding: 15px;\n}\n\n.list-title[contenteditable] {\n  cursor: pointer;\n  padding: 5px;\n  color: black;\n}\n\n.list-title[contenteditable]:empty::before {\n  content: 'Click to edit list';\n  color: gray;\n}\n\n.list-checkmark {\n  border: 1px solid black;\n  border-radius: 50%;\n  color: var(--mediumgreen);\n}\n\n.list-checkmark:hover {\n  color: black;\n  background: none;\n}\n\n.list-checkmark:active {\n  transform: scale(1.15);\n  background:black;\n  color: var(--ultragreen);\n}\n\n.del-list-btn {\n  display: flex;\n  width: 55px;\n  height: 55px;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  right: 5px;\n}\n\n.sublist-wrapper {\n  padding: 5px 15px 25px 45px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  position: relative;\n}\n\n.sublist-checkmark { \n  color: var(--easygreen);\n  width: 24px;\n  height: 24px;\n  font-size: 20px;\n}\n\n.sublist {\n  padding: 5px 10px 5px 10px;\n  width: 60%;\n  border: none;\n  background: none;\n  border-bottom: 1px solid black;\n  color: black;\n  font-weight: 300;\n  cursor: pointer;\n  line-height: 25px;\n}\n\n.sublist[contenteditable]:empty::before {\n  font-weight: 100;\n  color: black;\n}\n\n.sublist-desc[contenteditable]:empty::before {\n  content: 'Click to edit sublist';\n}\n\n.sublist-time {\n  width: 15%;\n}\n\n.sublist-time[contenteditable]:empty::before {\n  content: '8:00 PM';\n}\n\n.sublist-duration {\n  width: 15%;\n}\n\n.sublist-duration[contenteditable]:empty::before {\n  content: '1h 30m';\n}\n\n.sublist-wrapper > *:last-child {\n  font-size: 16px;\n}","",{version:3,sources:["webpack://./src/styles/main/2-lists.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,aAAa;EACb,2BAA2B;EAC3B,WAAW;EACX,cAAc;AAChB;;AAEA;EACE,8BAA8B;EAC9B,UAAU;EACV,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,kBAAkB;EAClB,oCAAoC;EACpC,4BAA4B;EAC5B,6BAA6B;EAC7B,aAAa;AACf;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,6BAA6B;EAC7B,WAAW;AACb;;AAEA;EACE,uBAAuB;EACvB,kBAAkB;EAClB,yBAAyB;AAC3B;;AAEA;EACE,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,sBAAsB;EACtB,gBAAgB;EAChB,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,2BAA2B;EAC3B,aAAa;EACb,mBAAmB;EACnB,SAAS;EACT,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,0BAA0B;EAC1B,UAAU;EACV,YAAY;EACZ,gBAAgB;EAChB,8BAA8B;EAC9B,YAAY;EACZ,gBAAgB;EAChB,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,eAAe;AACjB",sourcesContent:[".lists-wrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  padding: 30px;\n  background-color: lightcyan;\n  width: 100%;\n  overflow: auto;\n}\n\n.list {\n  background: rgb(211, 255, 211);\n  width: 50%;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.list-header {\n  display: flex;\n  align-items: center;\n  gap: 25px;\n  position: relative;\n  background-color: var(--mediumgreen);\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  padding: 15px;\n}\n\n.list-title[contenteditable] {\n  cursor: pointer;\n  padding: 5px;\n  color: black;\n}\n\n.list-title[contenteditable]:empty::before {\n  content: 'Click to edit list';\n  color: gray;\n}\n\n.list-checkmark {\n  border: 1px solid black;\n  border-radius: 50%;\n  color: var(--mediumgreen);\n}\n\n.list-checkmark:hover {\n  color: black;\n  background: none;\n}\n\n.list-checkmark:active {\n  transform: scale(1.15);\n  background:black;\n  color: var(--ultragreen);\n}\n\n.del-list-btn {\n  display: flex;\n  width: 55px;\n  height: 55px;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  right: 5px;\n}\n\n.sublist-wrapper {\n  padding: 5px 15px 25px 45px;\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  position: relative;\n}\n\n.sublist-checkmark { \n  color: var(--easygreen);\n  width: 24px;\n  height: 24px;\n  font-size: 20px;\n}\n\n.sublist {\n  padding: 5px 10px 5px 10px;\n  width: 60%;\n  border: none;\n  background: none;\n  border-bottom: 1px solid black;\n  color: black;\n  font-weight: 300;\n  cursor: pointer;\n  line-height: 25px;\n}\n\n.sublist[contenteditable]:empty::before {\n  font-weight: 100;\n  color: black;\n}\n\n.sublist-desc[contenteditable]:empty::before {\n  content: 'Click to edit sublist';\n}\n\n.sublist-time {\n  width: 15%;\n}\n\n.sublist-time[contenteditable]:empty::before {\n  content: '8:00 PM';\n}\n\n.sublist-duration {\n  width: 15%;\n}\n\n.sublist-duration[contenteditable]:empty::before {\n  content: '1h 30m';\n}\n\n.sublist-wrapper > *:last-child {\n  font-size: 16px;\n}"],sourceRoot:""}]);const a=i},449:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),s=t(645),i=t.n(s)()(o());i.push([n.id,".list-checkmark-checked, \n.sublist-checkmark-checked {\n    border: 1px solid var(--ultragreen);\n    color: var(--ultragreen);\n}\n\n.list-checkmark-checked:hover, \n.sublist-checkmark-checked:hover {\n    background-color: var(--ultragreen);\n    color: var(--easygreen);\n}\n\n.list-title-checked,\n.sublist-desc-checked,\n.sublist-time-checked,\n.sublist-duration-checked {\n    text-decoration-line: line-through;\n}","",{version:3,sources:["webpack://./src/styles/main/3-lists-checked.css"],names:[],mappings:"AAAA;;IAEI,mCAAmC;IACnC,wBAAwB;AAC5B;;AAEA;;IAEI,mCAAmC;IACnC,uBAAuB;AAC3B;;AAEA;;;;IAII,kCAAkC;AACtC",sourcesContent:[".list-checkmark-checked, \n.sublist-checkmark-checked {\n    border: 1px solid var(--ultragreen);\n    color: var(--ultragreen);\n}\n\n.list-checkmark-checked:hover, \n.sublist-checkmark-checked:hover {\n    background-color: var(--ultragreen);\n    color: var(--easygreen);\n}\n\n.list-title-checked,\n.sublist-desc-checked,\n.sublist-time-checked,\n.sublist-duration-checked {\n    text-decoration-line: line-through;\n}"],sourceRoot:""}]);const a=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,s){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var A=this[a][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&i[l[0]]||(void 0!==s&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=s),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([s]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var s={},i=[],a=0;a<n.length;a++){var A=n[a],c=r.base?A[0]+r.base:A[0],l=s[c]||0,d="".concat(c," ").concat(l);s[c]=l+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var b=o(u,r);r.byIndex=a,e.splice(a,0,{identifier:d,updater:b,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var s=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<s.length;i++){var a=t(s[i]);e[a].references--}for(var A=r(n,o),c=0;c<s.length;c++){var l=t(s[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}s=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var s=t.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},762:(n,e,t)=>{n.exports=t.p+"1c3c81d65eec935dee14.svg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var s=e[r]={id:r,exports:{}};return n[r](s,s.exports,t),s.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(762);const e=e=>{const t=new Image;t.src=n,e.appendChild(t)},r=n=>{const e=document.createElement("h2");e.innerText="Today",n.appendChild(e)},o=e=>{const t=new Image;t.src=n,e.appendChild(t)},s=n=>{const e=document.createElement("h2");e.innerText="Tomorrow",n.appendChild(e)},i=n=>{n.path[1].remove()},a=n=>{const e=n.target,t=n.path[1].children[1],r=n.path[1].children[2],o=n.path[1].children[3];A(e,t,r,o)},A=(n,e,t,r)=>{n.classList.toggle("sublist-checkmark-checked"),e.classList.toggle("sublist-desc-checked"),t.classList.toggle("sublist-time-checked"),r.classList.toggle("sublist-duration-checked")},c=n=>{const e=document.createElement("div");e.classList.add("sublist-wrapper"),l(e),d(e),p(e),u(e),b(e),n.appendChild(e)},l=n=>{const e=document.createElement("button");e.classList.add("sublist-checkmark","list-checkmark"),e.innerHTML="&#10004;",e.addEventListener("click",a),n.appendChild(e)},d=n=>{const e=document.createElement("p");e.classList.add("sublist","sublist-desc"),e.setAttribute("contenteditable",""),n.appendChild(e)},p=n=>{const e=document.createElement("p");e.classList.add("sublist","sublist-time"),e.setAttribute("contenteditable",""),n.appendChild(e)},u=n=>{const e=document.createElement("p");e.classList.add("sublist","sublist-duration"),e.setAttribute("contenteditable",""),n.appendChild(e)},b=n=>{const e=document.createElement("button");e.innerHTML="&#10060;",e.addEventListener("click",i),n.appendChild(e)},h=n=>{const e=n.path[2];c(e)},C=n=>{n.path[2].remove()},g=n=>{const e=n.target,t=n.path[1].children[1],r=n.path[2].children;m(e,t),f(r)},m=(n,e)=>{n.classList.toggle("list-checkmark-checked"),e.classList.toggle("list-title-checked")},f=n=>{for(let e=0;e<n.length;e++){const t=n[e];E(t)}},E=n=>{if(n.classList.contains("sublist-wrapper")){const e=n.children[0],t=n.children[1],r=n.children[2],o=n.children[3];e.classList.toggle("sublist-checkmark-checked"),t.classList.toggle("sublist-desc-checked"),r.classList.toggle("sublist-time-checked"),o.classList.toggle("sublist-duration-checked")}},B=n=>{const e=document.createElement("div");e.classList.add("list"),(n=>{const e=document.createElement("div");e.classList.add("list-header"),(n=>{const e=document.createElement("button");e.classList.add("list-checkmark"),e.addEventListener("mouseup",g),e.innerHTML="&#10004;",n.appendChild(e)})(e),(n=>{const e=document.createElement("h1");e.classList.add("list-title"),e.setAttribute("contenteditable",""),n.appendChild(e)})(e),(n=>{const e=document.createElement("button");e.classList.add("add-sublist-btn"),e.innerText="+",e.addEventListener("click",h),n.appendChild(e)})(e),(n=>{const e=document.createElement("button");e.classList.add("del-list-btn"),e.innerHTML="&#10060;",e.addEventListener("click",C),n.appendChild(e)})(e),n.appendChild(e)})(e),c(e),n.appendChild(e)};var k=t(379),x=t.n(k),v=t(795),y=t.n(v),w=t(569),I=t.n(w),Z=t(565),L=t.n(Z),T=t(216),Y=t.n(T),S=t(589),j=t.n(S),z=t(317),W={};W.styleTagTransform=j(),W.setAttributes=L(),W.insert=I().bind(null,"head"),W.domAPI=y(),W.insertStyleElement=Y(),x()(z.Z,W),z.Z&&z.Z.locals&&z.Z.locals;var q=t(930),R={};R.styleTagTransform=j(),R.setAttributes=L(),R.insert=I().bind(null,"head"),R.domAPI=y(),R.insertStyleElement=Y(),x()(q.Z,R),q.Z&&q.Z.locals&&q.Z.locals;var U=t(365),M={};M.styleTagTransform=j(),M.setAttributes=L(),M.insert=I().bind(null,"head"),M.domAPI=y(),M.insertStyleElement=Y(),x()(U.Z,M),U.Z&&U.Z.locals&&U.Z.locals;var P=t(149),X={};X.styleTagTransform=j(),X.setAttributes=L(),X.insert=I().bind(null,"head"),X.domAPI=y(),X.insertStyleElement=Y(),x()(P.Z,X),P.Z&&P.Z.locals&&P.Z.locals;var H=t(295),N={};N.styleTagTransform=j(),N.setAttributes=L(),N.insert=I().bind(null,"head"),N.domAPI=y(),N.insertStyleElement=Y(),x()(H.Z,N),H.Z&&H.Z.locals&&H.Z.locals;var O=t(71),F={};F.styleTagTransform=j(),F.setAttributes=L(),F.insert=I().bind(null,"head"),F.domAPI=y(),F.insertStyleElement=Y(),x()(O.Z,F),O.Z&&O.Z.locals&&O.Z.locals;var V=t(449),$={};$.styleTagTransform=j(),$.setAttributes=L(),$.insert=I().bind(null,"head"),$.domAPI=y(),$.insertStyleElement=Y(),x()(V.Z,$),V.Z&&V.Z.locals&&V.Z.locals,(()=>{const n=document.createElement("header");(n=>{const e=document.createElement("h1");e.classList.add("title"),e.innerText="Lista",n.appendChild(e)})(n),(n=>{const e=document.createElement("input");e.setAttribute("type","date"),n.appendChild(e)})(n),document.body.appendChild(n)})(),(()=>{const n=document.createElement("main");(n=>{const t=document.createElement("div");t.classList.add("sidebar"),(n=>{const t=document.createElement("div");t.classList.add("today-wrapper","sidebar-wrappers"),e(t),r(t),n.appendChild(t)})(t),(n=>{const e=document.createElement("div");e.classList.add("tom-wrapper","sidebar-wrappers"),o(e),s(e),n.appendChild(e)})(t),(n=>{const e=document.createElement("button");e.classList.add("add-list-btn"),e.innerText="+",n.appendChild(e)})(t),n.appendChild(t)})(n),(n=>{const e=document.createElement("div");e.classList.add("lists-wrapper"),B(e),n.appendChild(e)})(n),document.body.appendChild(n)})(),(()=>{const n=document.querySelector(".add-list-btn"),e=document.querySelector(".lists-wrapper");n.addEventListener("click",(()=>B(e)))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5idW5kbGUuanMiLCJtYXBwaW5ncyI6IndGQUdJQSxFLE1BQTBCLEdBQTRCLEtBRTFEQSxFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLG1uQ0FBb25DLEdBQUcsQ0FBQyxRQUFVLEVBQUUsUUFBVSxDQUFDLHNDQUFzQyxNQUFRLEdBQUcsU0FBVywyUUFBMlEsZUFBaUIsQ0FBQyxvbkNBQW9uQyxXQUFhLE1BRWxwRixXLDhEQ0pJSCxFLE1BQTBCLEdBQTRCLEtBQzFEQSxFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLGlLQUV6Q0gsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSx1d0JBQXd3QixHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyxzQ0FBc0MsTUFBUSxHQUFHLFNBQVcsc1pBQXNaLGVBQWlCLENBQUMsMDZCQUEwNkIsV0FBYSxNQUV2dUUsVyw4RENMSUgsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSx5WEFBNFgsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsNENBQTRDLE1BQVEsR0FBRyxTQUFXLDhLQUE4SyxlQUFpQixDQUFDLDBYQUE0WCxXQUFhLE1BRTNrQyxXLDhEQ0pJSCxFLE1BQTBCLEdBQTRCLEtBRTFEQSxFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLHNFQUF1RSxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQywwQ0FBMEMsTUFBUSxHQUFHLFNBQVcsMENBQTBDLGVBQWlCLENBQUMsdUVBQXVFLFdBQWEsTUFFM1YsVyw4RENKSUgsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSx5WkFBMFosR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsNkNBQTZDLE1BQVEsR0FBRyxTQUFXLHNNQUFzTSxlQUFpQixDQUFDLDBaQUEwWixXQUFhLE1BRWhxQyxXLDZEQ0pJSCxFLE1BQTBCLEdBQTRCLEtBRTFEQSxFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLHlqRUFBMGpFLEdBQUcsQ0FBQyxRQUFVLEVBQUUsUUFBVSxDQUFDLDJDQUEyQyxNQUFRLEdBQUcsU0FBVyx5OUJBQXk5QixlQUFpQixDQUFDLDBqRUFBMGpFLFdBQWEsTUFFanZLLFcsOERDSklILEUsTUFBMEIsR0FBNEIsS0FFMURBLEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUkseWFBQTBhLEdBQUcsQ0FBQyxRQUFVLEVBQUUsUUFBVSxDQUFDLG1EQUFtRCxNQUFRLEdBQUcsU0FBVyx3R0FBd0csZUFBaUIsQ0FBQywwYUFBMGEsV0FBYSxNQUV4bUMsVyxRQ0RBRCxFQUFPRSxRQUFVLFNBQVVDLEdBQ3pCLElBQUlDLEVBQU8sR0E2RlgsT0EzRkFBLEVBQUtDLFNBQVcsV0FDZCxPQUFPQyxLQUFLQyxLQUFJLFNBQVVDLEdBQ3hCLElBQUlDLEVBQVUsR0FDVkMsT0FBK0IsSUFBWkYsRUFBSyxHQTRCNUIsT0ExQklBLEVBQUssS0FDUEMsR0FBVyxjQUFjRSxPQUFPSCxFQUFLLEdBQUksUUFHdkNBLEVBQUssS0FDUEMsR0FBVyxVQUFVRSxPQUFPSCxFQUFLLEdBQUksT0FHbkNFLElBQ0ZELEdBQVcsU0FBU0UsT0FBT0gsRUFBSyxHQUFHSSxPQUFTLEVBQUksSUFBSUQsT0FBT0gsRUFBSyxJQUFNLEdBQUksT0FHNUVDLEdBQVdOLEVBQXVCSyxHQUU5QkUsSUFDRkQsR0FBVyxLQUdURCxFQUFLLEtBQ1BDLEdBQVcsS0FHVEQsRUFBSyxLQUNQQyxHQUFXLEtBR05BLEtBQ05JLEtBQUssS0FJVlQsRUFBS1UsRUFBSSxTQUFXQyxFQUFTQyxFQUFPQyxFQUFRQyxFQUFVQyxHQUM3QixpQkFBWkosSUFDVEEsRUFBVSxDQUFDLENBQUMsS0FBTUEsT0FBU0ssS0FHN0IsSUFBSUMsRUFBeUIsR0FFN0IsR0FBSUosRUFDRixJQUFLLElBQUlLLEVBQUksRUFBR0EsRUFBSWhCLEtBQUtNLE9BQVFVLElBQUssQ0FDcEMsSUFBSXJCLEVBQUtLLEtBQUtnQixHQUFHLEdBRVAsTUFBTnJCLElBQ0ZvQixFQUF1QnBCLElBQU0sR0FLbkMsSUFBSyxJQUFJc0IsRUFBSyxFQUFHQSxFQUFLUixFQUFRSCxPQUFRVyxJQUFNLENBQzFDLElBQUlmLEVBQU8sR0FBR0csT0FBT0ksRUFBUVEsSUFFekJOLEdBQVVJLEVBQXVCYixFQUFLLFdBSXJCLElBQVZXLFNBQ2MsSUFBWlgsRUFBSyxLQUdkQSxFQUFLLEdBQUssU0FBU0csT0FBT0gsRUFBSyxHQUFHSSxPQUFTLEVBQUksSUFBSUQsT0FBT0gsRUFBSyxJQUFNLEdBQUksTUFBTUcsT0FBT0gsRUFBSyxHQUFJLE1BRi9GQSxFQUFLLEdBQUtXLEdBT1ZILElBQ0dSLEVBQUssSUFHUkEsRUFBSyxHQUFLLFVBQVVHLE9BQU9ILEVBQUssR0FBSSxNQUFNRyxPQUFPSCxFQUFLLEdBQUksS0FDMURBLEVBQUssR0FBS1EsR0FIVlIsRUFBSyxHQUFLUSxHQU9WRSxJQUNHVixFQUFLLElBR1JBLEVBQUssR0FBSyxjQUFjRyxPQUFPSCxFQUFLLEdBQUksT0FBT0csT0FBT0gsRUFBSyxHQUFJLEtBQy9EQSxFQUFLLEdBQUtVLEdBSFZWLEVBQUssR0FBSyxHQUFHRyxPQUFPTyxJQU94QmQsRUFBS0wsS0FBS1MsTUFJUEosSSxRQ2xHVEosRUFBT0UsUUFBVSxTQUFVTSxHQUN6QixJQUFJQyxFQUFVRCxFQUFLLEdBQ2ZnQixFQUFhaEIsRUFBSyxHQUV0QixJQUFLZ0IsRUFDSCxPQUFPZixFQUdULEdBQW9CLG1CQUFUZ0IsS0FBcUIsQ0FDOUIsSUFBSUMsRUFBU0QsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVTixNQUN6RE8sRUFBTywrREFBK0RwQixPQUFPZSxHQUM3RU0sRUFBZ0IsT0FBT3JCLE9BQU9vQixFQUFNLE9BQ3BDRSxFQUFhVCxFQUFXVSxRQUFRM0IsS0FBSSxTQUFVNEIsR0FDaEQsTUFBTyxpQkFBaUJ4QixPQUFPYSxFQUFXWSxZQUFjLElBQUl6QixPQUFPd0IsRUFBUSxVQUU3RSxNQUFPLENBQUMxQixHQUFTRSxPQUFPc0IsR0FBWXRCLE9BQU8sQ0FBQ3FCLElBQWdCbkIsS0FBSyxNQUduRSxNQUFPLENBQUNKLEdBQVNJLEtBQUssUSxRQ2xCeEIsSUFBSXdCLEVBQWMsR0FFbEIsU0FBU0MsRUFBcUJDLEdBRzVCLElBRkEsSUFBSUMsR0FBVSxFQUVMMUIsRUFBSSxFQUFHQSxFQUFJdUIsRUFBWXpCLE9BQVFFLElBQ3RDLEdBQUl1QixFQUFZdkIsR0FBR3lCLGFBQWVBLEVBQVksQ0FDNUNDLEVBQVMxQixFQUNULE1BSUosT0FBTzBCLEVBR1QsU0FBU0MsRUFBYXJDLEVBQU1zQyxHQUkxQixJQUhBLElBQUlDLEVBQWEsR0FDYkMsRUFBYyxHQUVUOUIsRUFBSSxFQUFHQSxFQUFJVixFQUFLUSxPQUFRRSxJQUFLLENBQ3BDLElBQUlOLEVBQU9KLEVBQUtVLEdBQ1piLEVBQUt5QyxFQUFRRyxLQUFPckMsRUFBSyxHQUFLa0MsRUFBUUcsS0FBT3JDLEVBQUssR0FDbERzQyxFQUFRSCxFQUFXMUMsSUFBTyxFQUMxQnNDLEVBQWEsR0FBRzVCLE9BQU9WLEVBQUksS0FBS1UsT0FBT21DLEdBQzNDSCxFQUFXMUMsR0FBTTZDLEVBQVEsRUFDekIsSUFBSUMsRUFBb0JULEVBQXFCQyxHQUN6Q1MsRUFBTSxDQUNSQyxJQUFLekMsRUFBSyxHQUNWUSxNQUFPUixFQUFLLEdBQ1owQyxVQUFXMUMsRUFBSyxHQUNoQlUsU0FBVVYsRUFBSyxHQUNmVyxNQUFPWCxFQUFLLElBR2QsSUFBMkIsSUFBdkJ1QyxFQUNGVixFQUFZVSxHQUFtQkksYUFDL0JkLEVBQVlVLEdBQW1CSyxRQUFRSixPQUNsQyxDQUNMLElBQUlJLEVBQVVDLEVBQWdCTCxFQUFLTixHQUNuQ0EsRUFBUVksUUFBVXhDLEVBQ2xCdUIsRUFBWWtCLE9BQU96QyxFQUFHLEVBQUcsQ0FDdkJ5QixXQUFZQSxFQUNaYSxRQUFTQSxFQUNURCxXQUFZLElBSWhCUCxFQUFZN0MsS0FBS3dDLEdBR25CLE9BQU9LLEVBR1QsU0FBU1MsRUFBZ0JMLEVBQUtOLEdBQzVCLElBQUljLEVBQU1kLEVBQVFlLE9BQU9mLEdBZXpCLE9BZEFjLEVBQUlFLE9BQU9WLEdBRUcsU0FBaUJXLEdBQzdCLEdBQUlBLEVBQVEsQ0FDVixHQUFJQSxFQUFPVixNQUFRRCxFQUFJQyxLQUFPVSxFQUFPM0MsUUFBVWdDLEVBQUloQyxPQUFTMkMsRUFBT1QsWUFBY0YsRUFBSUUsV0FBYVMsRUFBT3pDLFdBQWE4QixFQUFJOUIsVUFBWXlDLEVBQU94QyxRQUFVNkIsRUFBSTdCLE1BQ3pKLE9BR0ZxQyxFQUFJRSxPQUFPVixFQUFNVyxRQUVqQkgsRUFBSUksVUFPVjVELEVBQU9FLFFBQVUsU0FBVUUsRUFBTXNDLEdBRy9CLElBQUltQixFQUFrQnBCLEVBRHRCckMsRUFBT0EsR0FBUSxHQURmc0MsRUFBVUEsR0FBVyxJQUdyQixPQUFPLFNBQWdCb0IsR0FDckJBLEVBQVVBLEdBQVcsR0FFckIsSUFBSyxJQUFJaEQsRUFBSSxFQUFHQSxFQUFJK0MsRUFBZ0JqRCxPQUFRRSxJQUFLLENBQy9DLElBQ0lpRCxFQUFRekIsRUFES3VCLEVBQWdCL0MsSUFFakN1QixFQUFZMEIsR0FBT1osYUFLckIsSUFGQSxJQUFJYSxFQUFxQnZCLEVBQWFxQixFQUFTcEIsR0FFdEN1QixFQUFLLEVBQUdBLEVBQUtKLEVBQWdCakQsT0FBUXFELElBQU0sQ0FDbEQsSUFFSUMsRUFBUzVCLEVBRkt1QixFQUFnQkksSUFJSyxJQUFuQzVCLEVBQVk2QixHQUFRZixhQUN0QmQsRUFBWTZCLEdBQVFkLFVBRXBCZixFQUFZa0IsT0FBT1csRUFBUSxJQUkvQkwsRUFBa0JHLEssUUNuR3RCLElBQUlHLEVBQU8sR0FvQ1huRSxFQUFPRSxRQVZQLFNBQTBCa0UsRUFBUUMsR0FDaEMsSUFBSUMsRUF4Qk4sU0FBbUJBLEdBQ2pCLFFBQTRCLElBQWpCSCxFQUFLRyxHQUF5QixDQUN2QyxJQUFJQyxFQUFjQyxTQUFTQyxjQUFjSCxHQUV6QyxHQUFJSSxPQUFPQyxtQkFBcUJKLGFBQXVCRyxPQUFPQyxrQkFDNUQsSUFHRUosRUFBY0EsRUFBWUssZ0JBQWdCQyxLQUMxQyxNQUFPQyxHQUVQUCxFQUFjLEtBSWxCSixFQUFLRyxHQUFVQyxFQUdqQixPQUFPSixFQUFLRyxHQU1DUyxDQUFVWCxHQUV2QixJQUFLRSxFQUNILE1BQU0sSUFBSVUsTUFBTSwyR0FHbEJWLEVBQU9XLFlBQVlaLEssUUN6QnJCckUsRUFBT0UsUUFQUCxTQUE0QndDLEdBQzFCLElBQUl3QyxFQUFVVixTQUFTVyxjQUFjLFNBR3JDLE9BRkF6QyxFQUFRMEMsY0FBY0YsRUFBU3hDLEVBQVEyQyxZQUN2QzNDLEVBQVEwQixPQUFPYyxFQUFTeEMsRUFBUUEsU0FDekJ3QyxJLGNDSVRsRixFQUFPRSxRQVJQLFNBQXdDb0YsR0FDdEMsSUFBSUMsRUFBbUQsS0FFbkRBLEdBQ0ZELEVBQWFFLGFBQWEsUUFBU0QsSyxRQzhEdkN2RixFQUFPRSxRQVpQLFNBQWdCd0MsR0FDZCxJQUFJNEMsRUFBZTVDLEVBQVErQyxtQkFBbUIvQyxHQUM5QyxNQUFPLENBQ0xnQixPQUFRLFNBQWdCVixJQXpENUIsU0FBZXNDLEVBQWM1QyxFQUFTTSxHQUNwQyxJQUFJQyxFQUFNLEdBRU5ELEVBQUk5QixXQUNOK0IsR0FBTyxjQUFjdEMsT0FBT3FDLEVBQUk5QixTQUFVLFFBR3hDOEIsRUFBSWhDLFFBQ05pQyxHQUFPLFVBQVV0QyxPQUFPcUMsRUFBSWhDLE1BQU8sT0FHckMsSUFBSU4sT0FBaUMsSUFBZHNDLEVBQUk3QixNQUV2QlQsSUFDRnVDLEdBQU8sU0FBU3RDLE9BQU9xQyxFQUFJN0IsTUFBTVAsT0FBUyxFQUFJLElBQUlELE9BQU9xQyxFQUFJN0IsT0FBUyxHQUFJLE9BRzVFOEIsR0FBT0QsRUFBSUMsSUFFUHZDLElBQ0Z1QyxHQUFPLEtBR0xELEVBQUloQyxRQUNOaUMsR0FBTyxLQUdMRCxFQUFJOUIsV0FDTitCLEdBQU8sS0FHVCxJQUFJQyxFQUFZRixFQUFJRSxVQUVoQkEsR0FBNkIsb0JBQVR6QixPQUN0QndCLEdBQU8sdURBQXVEdEMsT0FBT2MsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVb0IsTUFBZSxRQU10SVIsRUFBUWdELGtCQUFrQnpDLEVBQUtxQyxFQUFjNUMsRUFBUUEsU0FrQmpEaUQsQ0FBTUwsRUFBYzVDLEVBQVNNLElBRS9CWSxPQUFRLFlBakJaLFNBQTRCMEIsR0FFMUIsR0FBZ0MsT0FBNUJBLEVBQWFNLFdBQ2YsT0FBTyxFQUdUTixFQUFhTSxXQUFXQyxZQUFZUCxHQVloQ1EsQ0FBbUJSLE8sUUNqRHpCdEYsRUFBT0UsUUFaUCxTQUEyQitDLEVBQUtxQyxHQUM5QixHQUFJQSxFQUFhUyxXQUNmVCxFQUFhUyxXQUFXQyxRQUFVL0MsTUFDN0IsQ0FDTCxLQUFPcUMsRUFBYVcsWUFDbEJYLEVBQWFPLFlBQVlQLEVBQWFXLFlBR3hDWCxFQUFhTCxZQUFZVCxTQUFTMEIsZUFBZWpELE8seURDVmpEa0QsRUFBMkIsR0FHL0IsU0FBU0MsRUFBb0JDLEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQmpGLElBQWpCa0YsRUFDSCxPQUFPQSxFQUFhcEcsUUFHckIsSUFBSUYsRUFBU21HLEVBQXlCRSxHQUFZLENBQ2pEcEcsR0FBSW9HLEVBRUpuRyxRQUFTLElBT1YsT0FIQXFHLEVBQW9CRixHQUFVckcsRUFBUUEsRUFBT0UsUUFBU2tHLEdBRy9DcEcsRUFBT0UsUUNwQmZrRyxFQUFvQkksRUFBS3hHLElBQ3hCLElBQUl5RyxFQUFTekcsR0FBVUEsRUFBTzBHLFdBQzdCLElBQU8xRyxFQUFpQixRQUN4QixJQUFNLEVBRVAsT0FEQW9HLEVBQW9CTyxFQUFFRixFQUFRLENBQUVHLEVBQUdILElBQzVCQSxHQ0xSTCxFQUFvQk8sRUFBSSxDQUFDekcsRUFBUzJHLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWFQsRUFBb0JXLEVBQUVGLEVBQVlDLEtBQVNWLEVBQW9CVyxFQUFFN0csRUFBUzRHLElBQzVFRSxPQUFPQyxlQUFlL0csRUFBUzRHLEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxNQ0ozRVYsRUFBb0JnQixFQUFJLFdBQ3ZCLEdBQTBCLGlCQUFmQyxXQUF5QixPQUFPQSxXQUMzQyxJQUNDLE9BQU8vRyxNQUFRLElBQUlnSCxTQUFTLGNBQWIsR0FDZCxNQUFPeEMsR0FDUixHQUFzQixpQkFBWEosT0FBcUIsT0FBT0EsUUFMakIsR0NBeEIwQixFQUFvQlcsRUFBSSxDQUFDL0QsRUFBS3VFLElBQVVQLE9BQU9RLFVBQVVDLGVBQWVDLEtBQUsxRSxFQUFLdUUsRyxNQ0FsRixJQUFJSSxFQUNBdkIsRUFBb0JnQixFQUFFUSxnQkFBZUQsRUFBWXZCLEVBQW9CZ0IsRUFBRVMsU0FBVyxJQUN0RixJQUFJckQsRUFBVzRCLEVBQW9CZ0IsRUFBRTVDLFNBQ3JDLElBQUttRCxHQUFhbkQsSUFDYkEsRUFBU3NELGdCQUNaSCxFQUFZbkQsRUFBU3NELGNBQWNDLE1BQy9CSixHQUFXLENBQ2YsSUFBSUssRUFBVXhELEVBQVN5RCxxQkFBcUIsVUFDekNELEVBQVFwSCxTQUFRK0csRUFBWUssRUFBUUEsRUFBUXBILE9BQVMsR0FBR21ILEtBSzdELElBQUtKLEVBQVcsTUFBTSxJQUFJM0MsTUFBTSx5REFDaEMyQyxFQUFZQSxFQUFVTyxRQUFRLE9BQVEsSUFBSUEsUUFBUSxRQUFTLElBQUlBLFFBQVEsWUFBYSxLQUNwRjlCLEVBQW9CK0IsRUFBSVIsRyxzQkNieEIsTUFpQk1TLEVBQWtCQyxJQUNwQixNQUFNQyxFQUFNLElBQUlDLE1BQ2hCRCxFQUFJUCxJQUFNUyxFQUNWSCxFQUFPcEQsWUFBWXFELElBR2pCRyxFQUFrQkosSUFDcEIsTUFBTUssRUFBS2xFLFNBQVNXLGNBQWMsTUFDbEN1RCxFQUFHQyxVQUFZLFFBQ2ZOLEVBQU9wRCxZQUFZeUQsSUFXakJFLEVBQXFCUCxJQUN2QixNQUFNQyxFQUFNLElBQUlDLE1BQ2hCRCxFQUFJUCxJQUFNUyxFQUNWSCxFQUFPcEQsWUFBWXFELElBR2pCTyxFQUFxQlIsSUFDdkIsTUFBTUssRUFBS2xFLFNBQVNXLGNBQWMsTUFDbEN1RCxFQUFHQyxVQUFZLFdBQ2ZOLEVBQU9wRCxZQUFZeUQsSUNoRGpCSSxFQUFrQmhFLElBQ3BCQSxFQUFFaUUsS0FBSyxHQUFHbkYsVUNEUm9GLEVBQXdCbEUsSUFDMUIsTUFBTW1FLEVBQVluRSxFQUFFUixPQUNkNEUsRUFBY3BFLEVBQUVpRSxLQUFLLEdBQUdJLFNBQVMsR0FDakNDLEVBQWN0RSxFQUFFaUUsS0FBSyxHQUFHSSxTQUFTLEdBQ2pDRSxFQUFrQnZFLEVBQUVpRSxLQUFLLEdBQUdJLFNBQVMsR0FFM0NHLEVBQVVMLEVBQVdDLEVBQWFFLEVBQWFDLElBSTdDQyxFQUFZLENBQUNMLEVBQVdNLEVBQUtDLEVBQUtDLEtBQ3BDUixFQUFVUyxVQUFVQyxPQUFPLDZCQUMzQkosRUFBS0csVUFBVUMsT0FBTyx3QkFDdEJILEVBQUtFLFVBQVVDLE9BQU8sd0JBQ3RCRixFQUFTQyxVQUFVQyxPQUFPLDZCQ1h4QkMsRUFBdUJ2QixJQUN6QixNQUFNd0IsRUFBaUJyRixTQUFTVyxjQUFjLE9BQzlDMEUsRUFBZUgsVUFBVUksSUFBSSxtQkFDN0JDLEVBQXVCRixHQUN2QkcsRUFBa0JILEdBQ2xCSSxFQUFrQkosR0FDbEJLLEVBQXNCTCxHQUN0Qk0sRUFBYU4sR0FDYnhCLEVBQU9wRCxZQUFZNEUsSUFHakJFLEVBQXlCMUIsSUFDM0IsTUFBTStCLEVBQU01RixTQUFTVyxjQUFjLFVBQ25DaUYsRUFBSVYsVUFBVUksSUFBSSxvQkFBcUIsa0JBQ3ZDTSxFQUFJQyxVQUFZLFdBQ2hCRCxFQUFJRSxpQkFBaUIsUUFBU3RCLEdBQzlCWCxFQUFPcEQsWUFBWW1GLElBR2pCSixFQUFvQjNCLElBQ3RCLE1BQU1GLEVBQUkzRCxTQUFTVyxjQUFjLEtBQ2pDZ0QsRUFBRXVCLFVBQVVJLElBQUksVUFBVyxnQkFDM0IzQixFQUFFM0MsYUFBYSxrQkFBbUIsSUFDbEM2QyxFQUFPcEQsWUFBWWtELElBR2pCOEIsRUFBb0I1QixJQUN0QixNQUFNRixFQUFJM0QsU0FBU1csY0FBYyxLQUNqQ2dELEVBQUV1QixVQUFVSSxJQUFJLFVBQVcsZ0JBQzNCM0IsRUFBRTNDLGFBQWEsa0JBQW1CLElBQ2xDNkMsRUFBT3BELFlBQVlrRCxJQUdqQitCLEVBQXdCN0IsSUFDMUIsTUFBTUYsRUFBSTNELFNBQVNXLGNBQWMsS0FDakNnRCxFQUFFdUIsVUFBVUksSUFBSSxVQUFXLG9CQUMzQjNCLEVBQUUzQyxhQUFhLGtCQUFtQixJQUNsQzZDLEVBQU9wRCxZQUFZa0QsSUFHakJnQyxFQUFlOUIsSUFDakIsTUFBTStCLEVBQU01RixTQUFTVyxjQUFjLFVBQ25DaUYsRUFBSUMsVUFBWSxXQUNoQkQsRUFBSUUsaUJBQWlCLFFBQVN4QixHQUM5QlQsRUFBT3BELFlBQVltRixJQzdDakJHLEVBQXFCekYsSUFDdkIsTUFBTTBGLEVBQWExRixFQUFFaUUsS0FBSyxHQUMxQmEsRUFBcUJZLElDSm5CLEVBQWtCMUYsSUFDcEJBLEVBQUVpRSxLQUFLLEdBQUduRixVQ0RSNkcsRUFBcUIzRixJQUN2QixNQUFNbUUsRUFBWW5FLEVBQUVSLE9BQ2RvRyxFQUFZNUYsRUFBRWlFLEtBQUssR0FBR0ksU0FBUyxHQUMvQi9JLEVBQU8wRSxFQUFFaUUsS0FBSyxHQUFHSSxTQUN2QndCLEVBQWMxQixFQUFXeUIsR0FDekJFLEVBQWlCeEssSUFHZnVLLEVBQWdCLENBQUMxQixFQUFXeUIsS0FDOUJ6QixFQUFVUyxVQUFVQyxPQUFPLDBCQUMzQmUsRUFBVWhCLFVBQVVDLE9BQU8sdUJBR3pCaUIsRUFBbUJ4SyxJQUNyQixJQUFJLElBQUlVLEVBQUksRUFBR0EsRUFBSVYsRUFBS1EsT0FBUUUsSUFBSyxDQUNqQyxNQUFNK0osRUFBVXpLLEVBQUtVLEdBQ3JCNEMsRUFBT21ILEtBSVRuSCxFQUFTbUgsSUFDWCxHQUFJQSxFQUFRbkIsVUFBVW9CLFNBQVMsbUJBQW9CLENBRS9DLE1BQU03QixFQUFZNEIsRUFBUTFCLFNBQVMsR0FDN0JJLEVBQU9zQixFQUFRMUIsU0FBUyxHQUN4QkssRUFBT3FCLEVBQVExQixTQUFTLEdBQ3hCTSxFQUFXb0IsRUFBUTFCLFNBQVMsR0FFbENGLEVBQVVTLFVBQVVDLE9BQU8sNkJBQzNCSixFQUFLRyxVQUFVQyxPQUFPLHdCQUN0QkgsRUFBS0UsVUFBVUMsT0FBTyx3QkFDdEJGLEVBQVNDLFVBQVVDLE9BQU8sOEJDNUI1Qm9CLEVBQWExQyxJQUNmLE1BQU1qSSxFQUFPb0UsU0FBU1csY0FBYyxPQUNwQy9FLEVBQUtzSixVQUFVSSxJQUFJLFFDREV6QixDQUFBQSxJQUNyQixNQUFNMkMsRUFBYXhHLFNBQVNXLGNBQWMsT0FDMUM2RixFQUFXdEIsVUFBVUksSUFBSSxlQVFEekIsQ0FBQUEsSUFDeEIsTUFBTStCLEVBQU01RixTQUFTVyxjQUFjLFVBQ25DaUYsRUFBSVYsVUFBVUksSUFBSSxrQkFDbEJNLEVBQUlFLGlCQUFpQixVQUFXRyxHQUNoQ0wsRUFBSUMsVUFBWSxXQUNoQmhDLEVBQU9wRCxZQUFZbUYsSUFabkJhLENBQW9CRCxHQWVBM0MsQ0FBQUEsSUFDcEIsTUFBTTZDLEVBQUsxRyxTQUFTVyxjQUFjLE1BQ2xDK0YsRUFBR3hCLFVBQVVJLElBQUksY0FDakJvQixFQUFHMUYsYUFBYSxrQkFBbUIsSUFDbkM2QyxFQUFPcEQsWUFBWWlHLElBbEJuQkMsQ0FBZ0JILEdBcUJRM0MsQ0FBQUEsSUFDeEIsTUFBTStCLEVBQU01RixTQUFTVyxjQUFjLFVBQ25DaUYsRUFBSVYsVUFBVUksSUFBSSxtQkFDbEJNLEVBQUl6QixVQUFZLElBQ2hCeUIsRUFBSUUsaUJBQWlCLFFBQVNDLEdBQzlCbEMsRUFBT3BELFlBQVltRixJQXpCbkJnQixDQUFvQkosR0E0QkgzQyxDQUFBQSxJQUNqQixNQUFNK0IsRUFBTTVGLFNBQVNXLGNBQWMsVUFDbkNpRixFQUFJVixVQUFVSSxJQUFJLGdCQUNsQk0sRUFBSUMsVUFBWSxXQUNoQkQsRUFBSUUsaUJBQWlCLFFBQVMsR0FDOUJqQyxFQUFPcEQsWUFBWW1GLElBaENuQixDQUFhWSxHQUNiM0MsRUFBT3BELFlBQVkrRixJRExuQkssQ0FBaUJqTCxHQUNqQndKLEVBQXFCeEosR0FDckJpSSxFQUFPcEQsWUFBWTdFLEkseUhFR25Cc0MsRUFBVSxHQUVkQSxFQUFRZ0Qsa0JBQW9CLElBQzVCaEQsRUFBUTBDLGNBQWdCLElBRWxCMUMsRUFBUTBCLE9BQVMsU0FBYyxLQUFNLFFBRTNDMUIsRUFBUWUsT0FBUyxJQUNqQmYsRUFBUStDLG1CQUFxQixJQUVoQixJQUFJLElBQVMvQyxHQUtKLEtBQVcsWUFBaUIsVyxhQ2Y5QyxFQUFVLEdBRWQsRUFBUWdELGtCQUFvQixJQUM1QixFQUFRTixjQUFnQixJQUVsQixFQUFRaEIsT0FBUyxTQUFjLEtBQU0sUUFFM0MsRUFBUVgsT0FBUyxJQUNqQixFQUFRZ0MsbUJBQXFCLElBRWhCLElBQUksSUFBUyxHQUtKLEtBQVcsWUFBaUIsVyxhQ2Y5QyxFQUFVLEdBRWQsRUFBUUMsa0JBQW9CLElBQzVCLEVBQVFOLGNBQWdCLElBRWxCLEVBQVFoQixPQUFTLFNBQWMsS0FBTSxRQUUzQyxFQUFRWCxPQUFTLElBQ2pCLEVBQVFnQyxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTLEdBS0osS0FBVyxZQUFpQixXLGFDZjlDLEVBQVUsR0FFZCxFQUFRQyxrQkFBb0IsSUFDNUIsRUFBUU4sY0FBZ0IsSUFFbEIsRUFBUWhCLE9BQVMsU0FBYyxLQUFNLFFBRTNDLEVBQVFYLE9BQVMsSUFDakIsRUFBUWdDLG1CQUFxQixJQUVoQixJQUFJLElBQVMsR0FLSixLQUFXLFlBQWlCLFcsYUNmOUMsRUFBVSxHQUVkLEVBQVFDLGtCQUFvQixJQUM1QixFQUFRTixjQUFnQixJQUVsQixFQUFRaEIsT0FBUyxTQUFjLEtBQU0sUUFFM0MsRUFBUVgsT0FBUyxJQUNqQixFQUFRZ0MsbUJBQXFCLElBRWhCLElBQUksSUFBUyxHQUtKLEtBQVcsWUFBaUIsVyxZQ2Y5QyxFQUFVLEdBRWQsRUFBUUMsa0JBQW9CLElBQzVCLEVBQVFOLGNBQWdCLElBRWxCLEVBQVFoQixPQUFTLFNBQWMsS0FBTSxRQUUzQyxFQUFRWCxPQUFTLElBQ2pCLEVBQVFnQyxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTLEdBS0osS0FBVyxZQUFpQixXLGFDZjlDLEVBQVUsR0FFZCxFQUFRQyxrQkFBb0IsSUFDNUIsRUFBUU4sY0FBZ0IsSUFFbEIsRUFBUWhCLE9BQVMsU0FBYyxLQUFNLFFBRTNDLEVBQVFYLE9BQVMsSUFDakIsRUFBUWdDLG1CQUFxQixJQUVoQixJQUFJLElBQVMsR0FLSixLQUFXLFlBQWlCLFdDMUI3QixNQUNqQixNQUFNNkYsRUFBUzlHLFNBQVNXLGNBQWMsVUFNdEJrRCxDQUFBQSxJQUNoQixNQUFNa0QsRUFBUS9HLFNBQVNXLGNBQWMsTUFDckNvRyxFQUFNN0IsVUFBVUksSUFBSSxTQUNwQnlCLEVBQU01QyxVQUFZLFFBQ2xCTixFQUFPcEQsWUFBWXNHLElBVG5CQyxDQUFZRixHQVlHakQsQ0FBQUEsSUFDZixNQUFNb0QsRUFBT2pILFNBQVNXLGNBQWMsU0FDcENzRyxFQUFLakcsYUFBYSxPQUFRLFFBQzFCNkMsRUFBT3BELFlBQVl3RyxJQWRuQkMsQ0FBV0osR0FDWDlHLFNBQVNtSCxLQUFLMUcsWUFBWXFHLElDTzFCTSxHQ1JlLE1BQ2YsTUFBTUMsRUFBT3JILFNBQVNXLGNBQWMsUWxCRmxCa0QsQ0FBQUEsSUFDbEIsTUFBTXlELEVBQVV0SCxTQUFTVyxjQUFjLE9BQ3ZDMkcsRUFBUXBDLFVBQVVJLElBQUksV0FPQ3pCLENBQUFBLElBQ3ZCLE1BQU0wRCxFQUFldkgsU0FBU1csY0FBYyxPQUM1QzRHLEVBQWFyQyxVQUFVSSxJQUFJLGdCQUFpQixvQkFDNUMxQixFQUFnQjJELEdBQ2hCdEQsRUFBZ0JzRCxHQUNoQjFELEVBQU9wRCxZQUFZOEcsSUFYbkJDLENBQW1CRixHQTBCRXpELENBQUFBLElBQ3JCLE1BQU00RCxFQUFhekgsU0FBU1csY0FBYyxPQUMxQzhHLEVBQVd2QyxVQUFVSSxJQUFJLGNBQWUsb0JBQ3hDbEIsRUFBbUJxRCxHQUNuQnBELEVBQW1Cb0QsR0FDbkI1RCxFQUFPcEQsWUFBWWdILElBOUJuQkMsQ0FBaUJKLEdBNkNJekQsQ0FBQUEsSUFDckIsTUFBTStCLEVBQU01RixTQUFTVyxjQUFjLFVBQ25DaUYsRUFBSVYsVUFBVUksSUFBSSxnQkFDbEJNLEVBQUl6QixVQUFZLElBQ2hCTixFQUFPcEQsWUFBWW1GLElBaERuQitCLENBQWlCTCxHQUNqQnpELEVBQU9wRCxZQUFZNkcsSWtCSG5CTSxDQUFjUCxHQ0hTeEQsQ0FBQUEsSUFDdkIsTUFBTWdFLEVBQWU3SCxTQUFTVyxjQUFjLE9BQzVDa0gsRUFBYTNDLFVBQVVJLElBQUksaUJBQzNCaUIsRUFBV3NCLEdBQ1hoRSxFQUFPcEQsWUFBWW9ILElEQW5CQyxDQUFtQlQsR0FDbkJySCxTQUFTbUgsS0FBSzFHLFlBQVk0RyxJREsxQlUsR0dWWSxNQUNaLE1BQU1uQyxFQUFNNUYsU0FBU0MsY0FBYyxpQkFDN0I0SCxFQUFlN0gsU0FBU0MsY0FBYyxrQkFDNUMyRixFQUFJRSxpQkFBaUIsU0FBUyxJQUFNUyxFQUFXc0IsTUhRL0NHLEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLy4vc3JjL3N0eWxlcy8wLXJlc2V0LmNzcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3N0eWxlcy8wLXN0eWxlLmNzcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3N0eWxlcy9oZWFkZXIvaGVhZGVyLmNzcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3N0eWxlcy9tYWluLzAtbWFpbi5jc3MiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zdHlsZXMvbWFpbi8xLXNpZGViYXIuY3NzIiwid2VicGFjazovL3RvZG8vLi9zcmMvc3R5bGVzL21haW4vMi1saXN0cy5jc3MiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zdHlsZXMvbWFpbi8zLWxpc3RzLWNoZWNrZWQuY3NzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvZG8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdG9kby93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvZG8vd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9kb20vbWFpbi8wLXNpZGViYXIvc2lkZWJhci5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2ZlYXR1cmVzL2RlbC1zdWJsaXN0LmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvZmVhdHVyZXMvc3VibGlzdC1jaGVja21hcmsuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9kb20vbWFpbi8xLWxpc3RzLXdyYXBwZXIvMTItc3VibGlzdC5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2ZlYXR1cmVzL2FkZC1zdWJsaXN0LmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvZmVhdHVyZXMvZGVsLWxpc3QuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9mZWF0dXJlcy9saXN0LWNoZWNrbWFyay5qcyIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2RvbS9tYWluLzEtbGlzdHMtd3JhcHBlci8xMC1saXN0LmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvZG9tL21haW4vMS1saXN0cy13cmFwcGVyLzExLWxpc3QtaGVhZGVyLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvc3R5bGVzLzAtcmVzZXQuY3NzP2UxYTYiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9zdHlsZXMvMC1zdHlsZS5jc3M/OTFmZiIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3N0eWxlcy9oZWFkZXIvaGVhZGVyLmNzcz8xZDAyIiwid2VicGFjazovL3RvZG8vLi9zcmMvc3R5bGVzL21haW4vMC1tYWluLmNzcz8xZDkxIiwid2VicGFjazovL3RvZG8vLi9zcmMvc3R5bGVzL21haW4vMS1zaWRlYmFyLmNzcz82ZDZkIiwid2VicGFjazovL3RvZG8vLi9zcmMvc3R5bGVzL21haW4vMi1saXN0cy5jc3M/Yjg5ZiIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL3N0eWxlcy9tYWluLzMtbGlzdHMtY2hlY2tlZC5jc3M/NTBiYiIsIndlYnBhY2s6Ly90b2RvLy4vc3JjL2RvbS9oZWFkZXIvaGVhZGVyLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9kb20vbWFpbi9tYWluLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvZG9tL21haW4vMS1saXN0cy13cmFwcGVyLzAwLWxpc3RzLXdyYXBwZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9mZWF0dXJlcy9hZGQtbGlzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvIFxcbiAgIHYyLjAgfCAyMDExMDEyNlxcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXFxuKi9cXG5cXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcXG5iLCB1LCBpLCBjZW50ZXIsXFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCwgXFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBcXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xcblxcdG1hcmdpbjogMDtcXG5cXHRwYWRkaW5nOiAwO1xcblxcdGJvcmRlcjogMDtcXG5cXHRmb250LXNpemU6IDEwMCU7XFxuXFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcblxcdGZvbnQtZmFtaWx5OiBpbmhlcml0O1xcblxcdGZvbnQtc2l6ZTogaW5oZXJpdDtcXG59XFxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgXFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcXG5cXHRkaXNwbGF5OiBibG9jaztcXG59XFxuYm9keSB7XFxuXFx0bGluZS1oZWlnaHQ6IDE7XFxufVxcbm9sLCB1bCB7XFxuXFx0bGlzdC1zdHlsZTogbm9uZTtcXG59XFxuYmxvY2txdW90ZSwgcSB7XFxuXFx0cXVvdGVzOiBub25lO1xcbn1cXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcXG5xOmJlZm9yZSwgcTphZnRlciB7XFxuXFx0Y29udGVudDogJyc7XFxuXFx0Y29udGVudDogbm9uZTtcXG59XFxudGFibGUge1xcblxcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxuXFx0Ym9yZGVyLXNwYWNpbmc6IDA7XFxufVxcblxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvMC1yZXNldC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7OztDQUdDOztBQUVEOzs7Ozs7Ozs7Ozs7O0NBYUMsU0FBUztDQUNULFVBQVU7Q0FDVixTQUFTO0NBQ1QsZUFBZTtDQUNmLHdCQUF3QjtDQUN4QixvQkFBb0I7Q0FDcEIsa0JBQWtCO0FBQ25CO0FBQ0E7O0NBRUMsY0FBYztBQUNmO0FBQ0E7Q0FDQyxjQUFjO0FBQ2Y7QUFDQTtDQUNDLGdCQUFnQjtBQUNqQjtBQUNBO0NBQ0MsWUFBWTtBQUNiO0FBQ0E7O0NBRUMsV0FBVztDQUNYLGFBQWE7QUFDZDtBQUNBO0NBQ0MseUJBQXlCO0NBQ3pCLGlCQUFpQjtBQUNsQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0LyBcXG4gICB2Mi4wIHwgMjAxMTAxMjZcXG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxcbiovXFxuXFxuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXFxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXFxuYiwgdSwgaSwgY2VudGVyLFxcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXFxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsIFxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgXFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcXG5cXHRtYXJnaW46IDA7XFxuXFx0cGFkZGluZzogMDtcXG5cXHRib3JkZXI6IDA7XFxuXFx0Zm9udC1zaXplOiAxMDAlO1xcblxcdHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG5cXHRmb250LWZhbWlseTogaW5oZXJpdDtcXG5cXHRmb250LXNpemU6IGluaGVyaXQ7XFxufVxcbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsIFxcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XFxuXFx0ZGlzcGxheTogYmxvY2s7XFxufVxcbmJvZHkge1xcblxcdGxpbmUtaGVpZ2h0OiAxO1xcbn1cXG5vbCwgdWwge1xcblxcdGxpc3Qtc3R5bGU6IG5vbmU7XFxufVxcbmJsb2NrcXVvdGUsIHEge1xcblxcdHF1b3Rlczogbm9uZTtcXG59XFxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXFxucTpiZWZvcmUsIHE6YWZ0ZXIge1xcblxcdGNvbnRlbnQ6ICcnO1xcblxcdGNvbnRlbnQ6IG5vbmU7XFxufVxcbnRhYmxlIHtcXG5cXHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xcblxcdGJvcmRlci1zcGFjaW5nOiAwO1xcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG86aXRhbCx3Z2h0QDAsMTAwOzAsMzAwOzAsNDAwOzAsNTAwOzAsNzAwOzAsOTAwOzEsMTAwOzEsMzAwOzEsNDAwOzEsNTAwOzEsNzAwOzEsOTAwJmRpc3BsYXk9c3dhcCk7XCJdKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIjpyb290IHtcXG4gIC0tZWFzeWdyZWVuOiByZ2IoMjExLCAyNTUsIDIxMSk7XFxuICAtLW1lZGl1bWdyZWVuOiByZ2IoMTk1LCAyMzIsIDE5NSk7XFxuICAtLWhhcmRncmVlbjogcmdiKDE0NiwgMjExLCAxNDYpO1xcbiAgLS11bHRyYWdyZWVuOiByZ2IoMTI0LCAyMDQsIDEyNCk7XFxufVxcblxcbioge1xcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGZvbnQtd2VpZ2h0OiAyMDA7XFxuICBjb2xvcjogYmxhY2s7XFxufVxcblxcbmJvZHkge1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG59XFxuXFxuaDEge1xcbiAgZm9udC1zaXplOiAzMnB4O1xcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuaDIge1xcbiAgZm9udC1zaXplOiAxOHB4O1xcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXG59XFxuXFxuYnV0dG9uIHtcXG4gIGJhY2tncm91bmQ6IG5vbmU7XFxuICBib3JkZXI6IG5vbmU7XFxuICB3aWR0aDogMzBweDtcXG4gIGhlaWdodDogMzBweDtcXG4gIGZvbnQtc2l6ZTogMjRweDtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICBwYWRkaW5nOiA1cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbn1cXG5cXG5idXR0b246aG92ZXIge1xcbiAgYmFja2dyb3VuZDogdmFyKC0tdWx0cmFncmVlbik7XFxuICBjb2xvcjogYmxhY2s7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvMC1zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7RUFDRSwrQkFBK0I7RUFDL0IsaUNBQWlDO0VBQ2pDLCtCQUErQjtFQUMvQixnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxpQ0FBaUM7RUFDakMsc0JBQXNCO0VBQ3RCLGdCQUFnQjtFQUNoQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsaUNBQWlDO0VBQ2pDLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixZQUFZO0VBQ1osYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLDZCQUE2QjtFQUM3QixZQUFZO0FBQ2RcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Um9ib3RvOml0YWwsd2dodEAwLDEwMDswLDMwMDswLDQwMDswLDUwMDswLDcwMDswLDkwMDsxLDEwMDsxLDMwMDsxLDQwMDsxLDUwMDsxLDcwMDsxLDkwMCZkaXNwbGF5PXN3YXAnKTtcXG5cXG46cm9vdCB7XFxuICAtLWVhc3lncmVlbjogcmdiKDIxMSwgMjU1LCAyMTEpO1xcbiAgLS1tZWRpdW1ncmVlbjogcmdiKDE5NSwgMjMyLCAxOTUpO1xcbiAgLS1oYXJkZ3JlZW46IHJnYigxNDYsIDIxMSwgMTQ2KTtcXG4gIC0tdWx0cmFncmVlbjogcmdiKDEyNCwgMjA0LCAxMjQpO1xcbn1cXG5cXG4qIHtcXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICBmb250LXdlaWdodDogMjAwO1xcbiAgY29sb3I6IGJsYWNrO1xcbn1cXG5cXG5ib2R5IHtcXG4gIGhlaWdodDogMTAwdmg7XFxufVxcblxcbmgxIHtcXG4gIGZvbnQtc2l6ZTogMzJweDtcXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxufVxcblxcbmgyIHtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxufVxcblxcbmJ1dHRvbiB7XFxuICBiYWNrZ3JvdW5kOiBub25lO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgd2lkdGg6IDMwcHg7XFxuICBoZWlnaHQ6IDMwcHg7XFxuICBmb250LXNpemU6IDI0cHg7XFxuICBmb250LXdlaWdodDogNjAwO1xcbiAgcGFkZGluZzogNXB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG59XFxuXFxuYnV0dG9uOmhvdmVyIHtcXG4gIGJhY2tncm91bmQ6IHZhcigtLXVsdHJhZ3JlZW4pO1xcbiAgY29sb3I6IGJsYWNrO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJoZWFkZXIge1xcbiAgICBoZWlnaHQ6IDEwJTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBwYWRkaW5nOiAzMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1lYXN5Z3JlZW4pO1xcbn1cXG5cXG5pbnB1dFt0eXBlPVxcXCJkYXRlXFxcIl0ge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1lYXN5Z3JlZW4pO1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbiAgICBmb250LXNpemU6IDE2cHg7XFxuICAgIHBhZGRpbmc6IDVweDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBhcHBlYXJhbmNlOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICB0ZXh0LXJlbmRlcmluZzogbm9uZTtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9oZWFkZXIvaGVhZGVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFdBQVc7SUFDWCxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLGFBQWE7SUFDYixrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSxrQ0FBa0M7SUFDbEMsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixZQUFZO0lBQ1osWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsb0JBQW9CO0FBQ3hCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImhlYWRlciB7XFxuICAgIGhlaWdodDogMTAlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIHBhZGRpbmc6IDMwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWVhc3lncmVlbik7XFxufVxcblxcbmlucHV0W3R5cGU9XFxcImRhdGVcXFwiXSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWVhc3lncmVlbik7XFxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XFxuICAgIGZvbnQtc2l6ZTogMTZweDtcXG4gICAgcGFkZGluZzogNXB4O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGFwcGVhcmFuY2U6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIHRleHQtcmVuZGVyaW5nOiBub25lO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJtYWluIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgaGVpZ2h0OiA5MCU7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgfVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvbWFpbi8wLW1haW4uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksYUFBYTtJQUNiLFdBQVc7SUFDWCxXQUFXO0VBQ2JcIixcInNvdXJjZXNDb250ZW50XCI6W1wibWFpbiB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGhlaWdodDogOTAlO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIvKiBzaWRlYmFyICovXFxuLnNpZGViYXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBwYWRkaW5nOiAzMHB4IDYwcHggMCA2MHB4O1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIGdhcDogMTBweDtcXG4gIH1cXG4gIFxcbiAgLnNpZGViYXItd3JhcHBlcnMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDEwcHg7XFxuICB9XFxuICBcXG4gIC5zaWRlYmFyLXdyYXBwZXJzIGltZyB7XFxuICAgIHdpZHRoOiAyNHB4O1xcbiAgfVxcbiAgXFxuICAuYWRkLWxpc3QtYnRuIHtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICB3aWR0aDogNjBweDtcXG4gICAgaGVpZ2h0OiA2MHB4O1xcbiAgICBmb250LXNpemU6IDQwcHg7XFxuICB9XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9tYWluLzEtc2lkZWJhci5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsWUFBWTtBQUNaO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFNBQVM7RUFDWDs7RUFFQTtJQUNFLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsU0FBUztFQUNYOztFQUVBO0lBQ0UsV0FBVztFQUNiOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osZUFBZTtFQUNqQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiBzaWRlYmFyICovXFxuLnNpZGViYXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBwYWRkaW5nOiAzMHB4IDYwcHggMCA2MHB4O1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIGdhcDogMTBweDtcXG4gIH1cXG4gIFxcbiAgLnNpZGViYXItd3JhcHBlcnMge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDEwcHg7XFxuICB9XFxuICBcXG4gIC5zaWRlYmFyLXdyYXBwZXJzIGltZyB7XFxuICAgIHdpZHRoOiAyNHB4O1xcbiAgfVxcbiAgXFxuICAuYWRkLWxpc3QtYnRuIHtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICB3aWR0aDogNjBweDtcXG4gICAgaGVpZ2h0OiA2MHB4O1xcbiAgICBmb250LXNpemU6IDQwcHg7XFxuICB9XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmxpc3RzLXdyYXBwZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBnYXA6IDMwcHg7XFxuICBwYWRkaW5nOiAzMHB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRjeWFuO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBvdmVyZmxvdzogYXV0bztcXG59XFxuXFxuLmxpc3Qge1xcbiAgYmFja2dyb3VuZDogcmdiKDIxMSwgMjU1LCAyMTEpO1xcbiAgd2lkdGg6IDUwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogMTBweDtcXG59XFxuXFxuLmxpc3QtaGVhZGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiAyNXB4O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWVkaXVtZ3JlZW4pO1xcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMTBweDtcXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxMHB4O1xcbiAgcGFkZGluZzogMTVweDtcXG59XFxuXFxuLmxpc3QtdGl0bGVbY29udGVudGVkaXRhYmxlXSB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBwYWRkaW5nOiA1cHg7XFxuICBjb2xvcjogYmxhY2s7XFxufVxcblxcbi5saXN0LXRpdGxlW2NvbnRlbnRlZGl0YWJsZV06ZW1wdHk6OmJlZm9yZSB7XFxuICBjb250ZW50OiAnQ2xpY2sgdG8gZWRpdCBsaXN0JztcXG4gIGNvbG9yOiBncmF5O1xcbn1cXG5cXG4ubGlzdC1jaGVja21hcmsge1xcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBjb2xvcjogdmFyKC0tbWVkaXVtZ3JlZW4pO1xcbn1cXG5cXG4ubGlzdC1jaGVja21hcms6aG92ZXIge1xcbiAgY29sb3I6IGJsYWNrO1xcbiAgYmFja2dyb3VuZDogbm9uZTtcXG59XFxuXFxuLmxpc3QtY2hlY2ttYXJrOmFjdGl2ZSB7XFxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMTUpO1xcbiAgYmFja2dyb3VuZDpibGFjaztcXG4gIGNvbG9yOiB2YXIoLS11bHRyYWdyZWVuKTtcXG59XFxuXFxuLmRlbC1saXN0LWJ0biB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgd2lkdGg6IDU1cHg7XFxuICBoZWlnaHQ6IDU1cHg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogNXB4O1xcbn1cXG5cXG4uc3VibGlzdC13cmFwcGVyIHtcXG4gIHBhZGRpbmc6IDVweCAxNXB4IDI1cHggNDVweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZ2FwOiAxNXB4O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4uc3VibGlzdC1jaGVja21hcmsgeyBcXG4gIGNvbG9yOiB2YXIoLS1lYXN5Z3JlZW4pO1xcbiAgd2lkdGg6IDI0cHg7XFxuICBoZWlnaHQ6IDI0cHg7XFxuICBmb250LXNpemU6IDIwcHg7XFxufVxcblxcbi5zdWJsaXN0IHtcXG4gIHBhZGRpbmc6IDVweCAxMHB4IDVweCAxMHB4O1xcbiAgd2lkdGg6IDYwJTtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGJhY2tncm91bmQ6IG5vbmU7XFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgYmxhY2s7XFxuICBjb2xvcjogYmxhY2s7XFxuICBmb250LXdlaWdodDogMzAwO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgbGluZS1oZWlnaHQ6IDI1cHg7XFxufVxcblxcbi5zdWJsaXN0W2NvbnRlbnRlZGl0YWJsZV06ZW1wdHk6OmJlZm9yZSB7XFxuICBmb250LXdlaWdodDogMTAwO1xcbiAgY29sb3I6IGJsYWNrO1xcbn1cXG5cXG4uc3VibGlzdC1kZXNjW2NvbnRlbnRlZGl0YWJsZV06ZW1wdHk6OmJlZm9yZSB7XFxuICBjb250ZW50OiAnQ2xpY2sgdG8gZWRpdCBzdWJsaXN0JztcXG59XFxuXFxuLnN1Ymxpc3QtdGltZSB7XFxuICB3aWR0aDogMTUlO1xcbn1cXG5cXG4uc3VibGlzdC10aW1lW2NvbnRlbnRlZGl0YWJsZV06ZW1wdHk6OmJlZm9yZSB7XFxuICBjb250ZW50OiAnODowMCBQTSc7XFxufVxcblxcbi5zdWJsaXN0LWR1cmF0aW9uIHtcXG4gIHdpZHRoOiAxNSU7XFxufVxcblxcbi5zdWJsaXN0LWR1cmF0aW9uW2NvbnRlbnRlZGl0YWJsZV06ZW1wdHk6OmJlZm9yZSB7XFxuICBjb250ZW50OiAnMWggMzBtJztcXG59XFxuXFxuLnN1Ymxpc3Qtd3JhcHBlciA+ICo6bGFzdC1jaGlsZCB7XFxuICBmb250LXNpemU6IDE2cHg7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvbWFpbi8yLWxpc3RzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsU0FBUztFQUNULGFBQWE7RUFDYiwyQkFBMkI7RUFDM0IsV0FBVztFQUNYLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSw4QkFBOEI7RUFDOUIsVUFBVTtFQUNWLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsU0FBUztFQUNULGtCQUFrQjtFQUNsQixvQ0FBb0M7RUFDcEMsNEJBQTRCO0VBQzVCLDZCQUE2QjtFQUM3QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsWUFBWTtFQUNaLFlBQVk7QUFDZDs7QUFFQTtFQUNFLDZCQUE2QjtFQUM3QixXQUFXO0FBQ2I7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIsa0JBQWtCO0VBQ2xCLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsZ0JBQWdCO0VBQ2hCLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixXQUFXO0VBQ1gsWUFBWTtFQUNaLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLDJCQUEyQjtFQUMzQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFNBQVM7RUFDVCxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIsV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsMEJBQTBCO0VBQzFCLFVBQVU7RUFDVixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLDhCQUE4QjtFQUM5QixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtBQUNqQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubGlzdHMtd3JhcHBlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogMzBweDtcXG4gIHBhZGRpbmc6IDMwcHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGN5YW47XFxuICB3aWR0aDogMTAwJTtcXG4gIG92ZXJmbG93OiBhdXRvO1xcbn1cXG5cXG4ubGlzdCB7XFxuICBiYWNrZ3JvdW5kOiByZ2IoMjExLCAyNTUsIDIxMSk7XFxuICB3aWR0aDogNTAlO1xcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZ2FwOiAxMHB4O1xcbn1cXG5cXG4ubGlzdC1oZWFkZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDI1cHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tZWRpdW1ncmVlbik7XFxuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxMHB4O1xcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwcHg7XFxuICBwYWRkaW5nOiAxNXB4O1xcbn1cXG5cXG4ubGlzdC10aXRsZVtjb250ZW50ZWRpdGFibGVdIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHBhZGRpbmc6IDVweDtcXG4gIGNvbG9yOiBibGFjaztcXG59XFxuXFxuLmxpc3QtdGl0bGVbY29udGVudGVkaXRhYmxlXTplbXB0eTo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6ICdDbGljayB0byBlZGl0IGxpc3QnO1xcbiAgY29sb3I6IGdyYXk7XFxufVxcblxcbi5saXN0LWNoZWNrbWFyayB7XFxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGNvbG9yOiB2YXIoLS1tZWRpdW1ncmVlbik7XFxufVxcblxcbi5saXN0LWNoZWNrbWFyazpob3ZlciB7XFxuICBjb2xvcjogYmxhY2s7XFxuICBiYWNrZ3JvdW5kOiBub25lO1xcbn1cXG5cXG4ubGlzdC1jaGVja21hcms6YWN0aXZlIHtcXG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xNSk7XFxuICBiYWNrZ3JvdW5kOmJsYWNrO1xcbiAgY29sb3I6IHZhcigtLXVsdHJhZ3JlZW4pO1xcbn1cXG5cXG4uZGVsLWxpc3QtYnRuIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICB3aWR0aDogNTVweDtcXG4gIGhlaWdodDogNTVweDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiA1cHg7XFxufVxcblxcbi5zdWJsaXN0LXdyYXBwZXIge1xcbiAgcGFkZGluZzogNXB4IDE1cHggMjVweCA0NXB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDE1cHg7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5zdWJsaXN0LWNoZWNrbWFyayB7IFxcbiAgY29sb3I6IHZhcigtLWVhc3lncmVlbik7XFxuICB3aWR0aDogMjRweDtcXG4gIGhlaWdodDogMjRweDtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG59XFxuXFxuLnN1Ymxpc3Qge1xcbiAgcGFkZGluZzogNXB4IDEwcHggNXB4IDEwcHg7XFxuICB3aWR0aDogNjAlO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgYmFja2dyb3VuZDogbm9uZTtcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBibGFjaztcXG4gIGNvbG9yOiBibGFjaztcXG4gIGZvbnQtd2VpZ2h0OiAzMDA7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBsaW5lLWhlaWdodDogMjVweDtcXG59XFxuXFxuLnN1Ymxpc3RbY29udGVudGVkaXRhYmxlXTplbXB0eTo6YmVmb3JlIHtcXG4gIGZvbnQtd2VpZ2h0OiAxMDA7XFxuICBjb2xvcjogYmxhY2s7XFxufVxcblxcbi5zdWJsaXN0LWRlc2NbY29udGVudGVkaXRhYmxlXTplbXB0eTo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6ICdDbGljayB0byBlZGl0IHN1Ymxpc3QnO1xcbn1cXG5cXG4uc3VibGlzdC10aW1lIHtcXG4gIHdpZHRoOiAxNSU7XFxufVxcblxcbi5zdWJsaXN0LXRpbWVbY29udGVudGVkaXRhYmxlXTplbXB0eTo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6ICc4OjAwIFBNJztcXG59XFxuXFxuLnN1Ymxpc3QtZHVyYXRpb24ge1xcbiAgd2lkdGg6IDE1JTtcXG59XFxuXFxuLnN1Ymxpc3QtZHVyYXRpb25bY29udGVudGVkaXRhYmxlXTplbXB0eTo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6ICcxaCAzMG0nO1xcbn1cXG5cXG4uc3VibGlzdC13cmFwcGVyID4gKjpsYXN0LWNoaWxkIHtcXG4gIGZvbnQtc2l6ZTogMTZweDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmxpc3QtY2hlY2ttYXJrLWNoZWNrZWQsIFxcbi5zdWJsaXN0LWNoZWNrbWFyay1jaGVja2VkIHtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tdWx0cmFncmVlbik7XFxuICAgIGNvbG9yOiB2YXIoLS11bHRyYWdyZWVuKTtcXG59XFxuXFxuLmxpc3QtY2hlY2ttYXJrLWNoZWNrZWQ6aG92ZXIsIFxcbi5zdWJsaXN0LWNoZWNrbWFyay1jaGVja2VkOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tdWx0cmFncmVlbik7XFxuICAgIGNvbG9yOiB2YXIoLS1lYXN5Z3JlZW4pO1xcbn1cXG5cXG4ubGlzdC10aXRsZS1jaGVja2VkLFxcbi5zdWJsaXN0LWRlc2MtY2hlY2tlZCxcXG4uc3VibGlzdC10aW1lLWNoZWNrZWQsXFxuLnN1Ymxpc3QtZHVyYXRpb24tY2hlY2tlZCB7XFxuICAgIHRleHQtZGVjb3JhdGlvbi1saW5lOiBsaW5lLXRocm91Z2g7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvbWFpbi8zLWxpc3RzLWNoZWNrZWQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBOztJQUVJLG1DQUFtQztJQUNuQyx3QkFBd0I7QUFDNUI7O0FBRUE7O0lBRUksbUNBQW1DO0lBQ25DLHVCQUF1QjtBQUMzQjs7QUFFQTs7OztJQUlJLGtDQUFrQztBQUN0Q1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubGlzdC1jaGVja21hcmstY2hlY2tlZCwgXFxuLnN1Ymxpc3QtY2hlY2ttYXJrLWNoZWNrZWQge1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS11bHRyYWdyZWVuKTtcXG4gICAgY29sb3I6IHZhcigtLXVsdHJhZ3JlZW4pO1xcbn1cXG5cXG4ubGlzdC1jaGVja21hcmstY2hlY2tlZDpob3ZlciwgXFxuLnN1Ymxpc3QtY2hlY2ttYXJrLWNoZWNrZWQ6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS11bHRyYWdyZWVuKTtcXG4gICAgY29sb3I6IHZhcigtLWVhc3lncmVlbik7XFxufVxcblxcbi5saXN0LXRpdGxlLWNoZWNrZWQsXFxuLnN1Ymxpc3QtZGVzYy1jaGVja2VkLFxcbi5zdWJsaXN0LXRpbWUtY2hlY2tlZCxcXG4uc3VibGlzdC1kdXJhdGlvbi1jaGVja2VkIHtcXG4gICAgdGV4dC1kZWNvcmF0aW9uLWxpbmU6IGxpbmUtdGhyb3VnaDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsImltcG9ydCBjYWxlbmRhciBmcm9tICcuLi8uLi8uLi9hc3NldHMvaW1hZ2VzL2NhbGVuZGFyLnN2Zyc7XG5cbmNvbnN0IGluc2VydFNpZGVCYXIgPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IHNpZGViYXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzaWRlYmFyLmNsYXNzTGlzdC5hZGQoJ3NpZGViYXInKTtcbiAgICBpbnNlcnRUb2RheVdyYXBwZXIoc2lkZWJhcik7XG4gICAgaW5zZXJ0VG9tV3JhcHBlcihzaWRlYmFyKTtcbiAgICBpbnNlcnRBZGRMaXN0QnRuKHNpZGViYXIpO1xuICAgIHBhcmVudC5hcHBlbmRDaGlsZChzaWRlYmFyKTtcbn07XG5cbmNvbnN0IGluc2VydFRvZGF5V3JhcHBlciA9IHBhcmVudCA9PiB7XG4gICAgY29uc3QgdG9kYXlXcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdG9kYXlXcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ3RvZGF5LXdyYXBwZXInLCAnc2lkZWJhci13cmFwcGVycycpO1xuICAgIGluc2VydFRvZGF5SWNvbih0b2RheVdyYXBwZXIpO1xuICAgIGluc2VydFRvZGF5VGV4dCh0b2RheVdyYXBwZXIpO1xuICAgIHBhcmVudC5hcHBlbmRDaGlsZCh0b2RheVdyYXBwZXIpO1xufTtcblxuY29uc3QgaW5zZXJ0VG9kYXlJY29uID0gcGFyZW50ID0+IHtcbiAgICBjb25zdCBpbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICBpbWcuc3JjID0gY2FsZW5kYXI7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKGltZyk7XG59O1xuXG5jb25zdCBpbnNlcnRUb2RheVRleHQgPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IGgyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICBoMi5pbm5lclRleHQgPSAnVG9kYXknO1xuICAgIHBhcmVudC5hcHBlbmRDaGlsZChoMik7XG59O1xuXG5jb25zdCBpbnNlcnRUb21XcmFwcGVyID0gcGFyZW50ID0+IHtcbiAgICBjb25zdCB0b21XcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdG9tV3JhcHBlci5jbGFzc0xpc3QuYWRkKCd0b20td3JhcHBlcicsICdzaWRlYmFyLXdyYXBwZXJzJyk7XG4gICAgaW5zZXJ0VG9tb3Jyb3dJY29uKHRvbVdyYXBwZXIpO1xuICAgIGluc2VydFRvbW9ycm93VGV4dCh0b21XcmFwcGVyKTtcbiAgICBwYXJlbnQuYXBwZW5kQ2hpbGQodG9tV3JhcHBlcik7XG59O1xuXG5jb25zdCBpbnNlcnRUb21vcnJvd0ljb24gPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpO1xuICAgIGltZy5zcmMgPSBjYWxlbmRhcjtcbiAgICBwYXJlbnQuYXBwZW5kQ2hpbGQoaW1nKTsgXG59O1xuXG5jb25zdCBpbnNlcnRUb21vcnJvd1RleHQgPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IGgyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICBoMi5pbm5lclRleHQgPSAnVG9tb3Jyb3cnO1xuICAgIHBhcmVudC5hcHBlbmRDaGlsZChoMik7XG59O1xuXG5jb25zdCBpbnNlcnRBZGRMaXN0QnRuID0gcGFyZW50ID0+IHtcbiAgICBjb25zdCBidG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBidG4uY2xhc3NMaXN0LmFkZCgnYWRkLWxpc3QtYnRuJyk7XG4gICAgYnRuLmlubmVyVGV4dCA9ICcrJztcbiAgICBwYXJlbnQuYXBwZW5kQ2hpbGQoYnRuKTtcbn07XG5cbmV4cG9ydCB7aW5zZXJ0U2lkZUJhcn07IiwiY29uc3QgbGlzdERlbEJ0bkV2ZW50ID0gZSA9PiB7XG4gICAgZS5wYXRoWzFdLnJlbW92ZSgpO1xufTtcblxuZXhwb3J0IHtsaXN0RGVsQnRuRXZlbnR9OyIsImNvbnN0IHN1Ymxpc3RDaGVja21hcmtFdmVudCA9IGUgPT4ge1xuICAgIGNvbnN0IGNoZWNrbWFyayA9IGUudGFyZ2V0O1xuICAgIGNvbnN0IHN1Ymxpc3REZXNjID0gZS5wYXRoWzFdLmNoaWxkcmVuWzFdO1xuICAgIGNvbnN0IHN1Ymxpc3RUaW1lID0gZS5wYXRoWzFdLmNoaWxkcmVuWzJdO1xuICAgIGNvbnN0IHN1Ymxpc3REdXJhdGlvbiA9IGUucGF0aFsxXS5jaGlsZHJlblszXVxuXG4gICAgZG9tQ2hhbmdlKGNoZWNrbWFyaywgc3VibGlzdERlc2MsIHN1Ymxpc3RUaW1lLCBzdWJsaXN0RHVyYXRpb24pO1xuXG59O1xuXG5jb25zdCBkb21DaGFuZ2UgPSAoY2hlY2ttYXJrLCBkZXNjLHRpbWUsZHVyYXRpb24pID0+IHtcbiAgICBjaGVja21hcmsuY2xhc3NMaXN0LnRvZ2dsZSgnc3VibGlzdC1jaGVja21hcmstY2hlY2tlZCcpO1xuICAgIGRlc2MuY2xhc3NMaXN0LnRvZ2dsZSgnc3VibGlzdC1kZXNjLWNoZWNrZWQnKTtcbiAgICB0aW1lLmNsYXNzTGlzdC50b2dnbGUoJ3N1Ymxpc3QtdGltZS1jaGVja2VkJyk7XG4gICAgZHVyYXRpb24uY2xhc3NMaXN0LnRvZ2dsZSgnc3VibGlzdC1kdXJhdGlvbi1jaGVja2VkJyk7XG59XG5cbmV4cG9ydCB7c3VibGlzdENoZWNrbWFya0V2ZW50fTsiLCJpbXBvcnQge2xpc3REZWxCdG5FdmVudH0gZnJvbSAnLi4vLi4vLi4vZmVhdHVyZXMvZGVsLXN1Ymxpc3QuanMnO1xuaW1wb3J0IHtzdWJsaXN0Q2hlY2ttYXJrRXZlbnR9IGZyb20gJy4uLy4uLy4uL2ZlYXR1cmVzL3N1Ymxpc3QtY2hlY2ttYXJrLmpzJztcblxuY29uc3QgaW5zZXJ0U3VibGlzdFdyYXBwZXIgPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IHN1Ymxpc3RXcmFwcGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgc3VibGlzdFdyYXBwZXIuY2xhc3NMaXN0LmFkZCgnc3VibGlzdC13cmFwcGVyJyk7XG4gICAgaW5zZXJ0U3VibGlzdENoZWNrbWFyayhzdWJsaXN0V3JhcHBlcik7XG4gICAgaW5zZXJ0U3VibGlzdERlc2Moc3VibGlzdFdyYXBwZXIpO1xuICAgIGluc2VydFN1Ymxpc3RUaW1lKHN1Ymxpc3RXcmFwcGVyKTtcbiAgICBpbnNlcnRTdWJsaXN0RHVyYXRpb24oc3VibGlzdFdyYXBwZXIpO1xuICAgIGluc2VydERlbEJ0bihzdWJsaXN0V3JhcHBlcik7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKHN1Ymxpc3RXcmFwcGVyKTtcbn07XG5cbmNvbnN0IGluc2VydFN1Ymxpc3RDaGVja21hcmsgPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCdzdWJsaXN0LWNoZWNrbWFyaycsICdsaXN0LWNoZWNrbWFyaycpO1xuICAgIGJ0bi5pbm5lckhUTUwgPSAnJiMxMDAwNDsnO1xuICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHN1Ymxpc3RDaGVja21hcmtFdmVudCk7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKGJ0bik7XG59O1xuXG5jb25zdCBpbnNlcnRTdWJsaXN0RGVzYyA9IHBhcmVudCA9PiB7XG4gICAgY29uc3QgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICBwLmNsYXNzTGlzdC5hZGQoJ3N1Ymxpc3QnLCAnc3VibGlzdC1kZXNjJyk7XG4gICAgcC5zZXRBdHRyaWJ1dGUoJ2NvbnRlbnRlZGl0YWJsZScsICcnKTtcbiAgICBwYXJlbnQuYXBwZW5kQ2hpbGQocCk7XG59O1xuXG5jb25zdCBpbnNlcnRTdWJsaXN0VGltZSA9IHBhcmVudCA9PiB7XG4gICAgY29uc3QgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICBwLmNsYXNzTGlzdC5hZGQoJ3N1Ymxpc3QnLCAnc3VibGlzdC10aW1lJyk7XG4gICAgcC5zZXRBdHRyaWJ1dGUoJ2NvbnRlbnRlZGl0YWJsZScsICcnKTtcbiAgICBwYXJlbnQuYXBwZW5kQ2hpbGQocCk7XG59O1xuXG5jb25zdCBpbnNlcnRTdWJsaXN0RHVyYXRpb24gPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgcC5jbGFzc0xpc3QuYWRkKCdzdWJsaXN0JywgJ3N1Ymxpc3QtZHVyYXRpb24nKTtcbiAgICBwLnNldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJywgJycpO1xuICAgIHBhcmVudC5hcHBlbmRDaGlsZChwKTtcbn07XG5cbmNvbnN0IGluc2VydERlbEJ0biA9IHBhcmVudCA9PiB7XG4gICAgY29uc3QgYnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgYnRuLmlubmVySFRNTCA9ICcmIzEwMDYwOyc7XG4gICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgbGlzdERlbEJ0bkV2ZW50KTtcbiAgICBwYXJlbnQuYXBwZW5kQ2hpbGQoYnRuKTtcbn07XG5cbmV4cG9ydCB7aW5zZXJ0U3VibGlzdFdyYXBwZXJ9OyIsImltcG9ydCB7aW5zZXJ0U3VibGlzdFdyYXBwZXJ9IGZyb20gJy4uL2RvbS9tYWluLzEtbGlzdHMtd3JhcHBlci8xMi1zdWJsaXN0LmpzJztcblxuY29uc3QgYWRkU3VibGlzdEJ0bkV2ZW50ID0gZSA9PiB7XG4gICAgY29uc3QgcGFyZW50TGlzdCA9IGUucGF0aFsyXTtcbiAgICBpbnNlcnRTdWJsaXN0V3JhcHBlcihwYXJlbnRMaXN0KTtcbn07XG5cbmV4cG9ydCB7YWRkU3VibGlzdEJ0bkV2ZW50fTsiLCJjb25zdCBsaXN0RGVsQnRuRXZlbnQgPSBlID0+IHtcbiAgICBlLnBhdGhbMl0ucmVtb3ZlKCk7XG59O1xuXG5leHBvcnQge2xpc3REZWxCdG5FdmVudH07IiwiY29uc3QgbGlzdENoZWNrbWFya0V2ZW50ID0gZSA9PiB7XG4gICAgY29uc3QgY2hlY2ttYXJrID0gZS50YXJnZXQ7XG4gICAgY29uc3QgbGlzdFRpdGxlID0gZS5wYXRoWzFdLmNoaWxkcmVuWzFdO1xuICAgIGNvbnN0IGxpc3QgPSBlLnBhdGhbMl0uY2hpbGRyZW5cbiAgICBkb21DaGFuZ2VMaXN0KGNoZWNrbWFyaywgbGlzdFRpdGxlKTtcbiAgICBkb21DaGFuZ2VTdWJsaXN0KGxpc3QpO1xufTtcblxuY29uc3QgZG9tQ2hhbmdlTGlzdCA9IChjaGVja21hcmssIGxpc3RUaXRsZSkgPT4ge1xuICAgIGNoZWNrbWFyay5jbGFzc0xpc3QudG9nZ2xlKCdsaXN0LWNoZWNrbWFyay1jaGVja2VkJyk7XG4gICAgbGlzdFRpdGxlLmNsYXNzTGlzdC50b2dnbGUoJ2xpc3QtdGl0bGUtY2hlY2tlZCcpO1xufVxuXG5jb25zdCBkb21DaGFuZ2VTdWJsaXN0ID0gbGlzdCA9PiB7XG4gICAgZm9yKGxldCBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgc3VibGlzdCA9IGxpc3RbaV07XG4gICAgICAgIHVwZGF0ZShzdWJsaXN0KTtcbiAgICB9XG59XG5cbmNvbnN0IHVwZGF0ZSA9IHN1Ymxpc3QgPT4ge1xuICAgIGlmIChzdWJsaXN0LmNsYXNzTGlzdC5jb250YWlucygnc3VibGlzdC13cmFwcGVyJykpIHtcblxuICAgICAgICBjb25zdCBjaGVja21hcmsgPSBzdWJsaXN0LmNoaWxkcmVuWzBdO1xuICAgICAgICBjb25zdCBkZXNjID0gc3VibGlzdC5jaGlsZHJlblsxXTtcbiAgICAgICAgY29uc3QgdGltZSA9IHN1Ymxpc3QuY2hpbGRyZW5bMl07XG4gICAgICAgIGNvbnN0IGR1cmF0aW9uID0gc3VibGlzdC5jaGlsZHJlblszXTtcblxuICAgICAgICBjaGVja21hcmsuY2xhc3NMaXN0LnRvZ2dsZSgnc3VibGlzdC1jaGVja21hcmstY2hlY2tlZCcpO1xuICAgICAgICBkZXNjLmNsYXNzTGlzdC50b2dnbGUoJ3N1Ymxpc3QtZGVzYy1jaGVja2VkJyk7XG4gICAgICAgIHRpbWUuY2xhc3NMaXN0LnRvZ2dsZSgnc3VibGlzdC10aW1lLWNoZWNrZWQnKTtcbiAgICAgICAgZHVyYXRpb24uY2xhc3NMaXN0LnRvZ2dsZSgnc3VibGlzdC1kdXJhdGlvbi1jaGVja2VkJyk7XG4gICAgfVxufVxuXG5leHBvcnQge2xpc3RDaGVja21hcmtFdmVudH07IiwiaW1wb3J0IHtpbnNlcnRMaXN0SGVhZGVyfSBmcm9tICcuLzExLWxpc3QtaGVhZGVyLmpzJztcbmltcG9ydCB7aW5zZXJ0U3VibGlzdFdyYXBwZXJ9IGZyb20gJy4vMTItc3VibGlzdC5qcyc7XG5cbmNvbnN0IGluc2VydExpc3QgPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IGxpc3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBsaXN0LmNsYXNzTGlzdC5hZGQoJ2xpc3QnKTtcbiAgICBpbnNlcnRMaXN0SGVhZGVyKGxpc3QpO1xuICAgIGluc2VydFN1Ymxpc3RXcmFwcGVyKGxpc3QpO1xuICAgIHBhcmVudC5hcHBlbmRDaGlsZChsaXN0KTtcbn07XG5cbmV4cG9ydCB7aW5zZXJ0TGlzdH07IiwiaW1wb3J0IHthZGRTdWJsaXN0QnRuRXZlbnR9IGZyb20gJy4uLy4uLy4uL2ZlYXR1cmVzL2FkZC1zdWJsaXN0LmpzJztcbmltcG9ydCB7bGlzdERlbEJ0bkV2ZW50fSBmcm9tICcuLi8uLi8uLi9mZWF0dXJlcy9kZWwtbGlzdC5qcyc7XG5pbXBvcnQge2xpc3RDaGVja21hcmtFdmVudH0gZnJvbSAnLi4vLi4vLi4vZmVhdHVyZXMvbGlzdC1jaGVja21hcmsuanMnO1xuXG5jb25zdCBpbnNlcnRMaXN0SGVhZGVyID0gcGFyZW50ID0+IHtcbiAgICBjb25zdCBsaXN0SGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGlzdEhlYWRlci5jbGFzc0xpc3QuYWRkKCdsaXN0LWhlYWRlcicpO1xuICAgIGluc2VydExpc3RDaGVja21hcmsobGlzdEhlYWRlcik7IFxuICAgIGluc2VydExpc3RUaXRsZShsaXN0SGVhZGVyKTtcbiAgICBpbnNlcnRBZGRTdWJsaXN0QnRuKGxpc3RIZWFkZXIpO1xuICAgIGluc2VydERlbEJ0bihsaXN0SGVhZGVyKTtcbiAgICBwYXJlbnQuYXBwZW5kQ2hpbGQobGlzdEhlYWRlcik7XG59O1xuXG5jb25zdCBpbnNlcnRMaXN0Q2hlY2ttYXJrID0gcGFyZW50ID0+IHtcbiAgICBjb25zdCBidG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBidG4uY2xhc3NMaXN0LmFkZCgnbGlzdC1jaGVja21hcmsnKTtcbiAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIGxpc3RDaGVja21hcmtFdmVudCk7XG4gICAgYnRuLmlubmVySFRNTCA9ICcmIzEwMDA0Oyc7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKGJ0bik7XG59O1xuXG5jb25zdCBpbnNlcnRMaXN0VGl0bGUgPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IGgxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDEnKTtcbiAgICBoMS5jbGFzc0xpc3QuYWRkKCdsaXN0LXRpdGxlJyk7XG4gICAgaDEuc2V0QXR0cmlidXRlKCdjb250ZW50ZWRpdGFibGUnLCAnJyk7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKGgxKTtcbn07XG5cbmNvbnN0IGluc2VydEFkZFN1Ymxpc3RCdG4gPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCdhZGQtc3VibGlzdC1idG4nKTtcbiAgICBidG4uaW5uZXJUZXh0ID0gJysnO1xuICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFkZFN1Ymxpc3RCdG5FdmVudCk7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKGJ0bik7XG59O1xuXG5jb25zdCBpbnNlcnREZWxCdG4gPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCdkZWwtbGlzdC1idG4nKTtcbiAgICBidG4uaW5uZXJIVE1MID0gJyYjMTAwNjA7J1xuICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGxpc3REZWxCdG5FdmVudCk7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKGJ0bik7XG59XG5cbmV4cG9ydCB7aW5zZXJ0TGlzdEhlYWRlcn07IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLzAtcmVzZXQuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi8wLXJlc2V0LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi8wLXN0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vMC1zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaGVhZGVyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaGVhZGVyLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi8wLW1haW4uY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi8wLW1haW4uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLzEtc2lkZWJhci5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLzEtc2lkZWJhci5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vMi1saXN0cy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLzItbGlzdHMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLzMtbGlzdHMtY2hlY2tlZC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLzMtbGlzdHMtY2hlY2tlZC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJjb25zdCBpbnNlcnRIZWFkZXIgPSAoKSA9PiB7XG4gICAgY29uc3QgaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaGVhZGVyJyk7XG4gICAgaW5zZXJ0VGl0bGUoaGVhZGVyKTtcbiAgICBpbnNlcnREYXRlKGhlYWRlcik7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChoZWFkZXIpO1xufTtcblxuY29uc3QgaW5zZXJ0VGl0bGUgPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDEnKTtcbiAgICB0aXRsZS5jbGFzc0xpc3QuYWRkKCd0aXRsZScpO1xuICAgIHRpdGxlLmlubmVyVGV4dCA9ICdMaXN0YSc7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKHRpdGxlKTtcbn07XG5cbmNvbnN0IGluc2VydERhdGUgPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IGRhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIGRhdGUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2RhdGUnKTtcbiAgICBwYXJlbnQuYXBwZW5kQ2hpbGQoZGF0ZSk7XG59O1xuXG5leHBvcnQge2luc2VydEhlYWRlcn07IiwiaW1wb3J0IHtpbnNlcnRIZWFkZXIsIGluc2VydE1haW59IGZyb20gJy4vZG9tL2RvbS5qcyc7XG5pbXBvcnQge2FkZExpc3R9IGZyb20gJy4vZmVhdHVyZXMvYWRkLWxpc3QuanMnO1xuaW1wb3J0ICcuL3N0eWxlcy8wLXJlc2V0LmNzcyc7XG5pbXBvcnQgJy4vc3R5bGVzLzAtc3R5bGUuY3NzJztcbmltcG9ydCAnLi9zdHlsZXMvaGVhZGVyL2hlYWRlci5jc3MnO1xuaW1wb3J0ICcuL3N0eWxlcy9tYWluLzAtbWFpbi5jc3MnO1xuaW1wb3J0ICcuL3N0eWxlcy9tYWluLzEtc2lkZWJhci5jc3MnO1xuaW1wb3J0ICcuL3N0eWxlcy9tYWluLzItbGlzdHMuY3NzJztcbmltcG9ydCAnLi9zdHlsZXMvbWFpbi8zLWxpc3RzLWNoZWNrZWQuY3NzJztcblxuKGZ1bmN0aW9uICgpe1xuICAgIGluc2VydEhlYWRlcigpO1xuICAgIGluc2VydE1haW4oKTtcbiAgICBhZGRMaXN0KCk7XG59KSgpO1xuXG4vKlxuVE8gRE8gKGlyb25pYylcbiAgICB1aVxuICAgICAgICBsaXN0IGNoZWNrbWFyayB0b2dnbGVzIHN1Ymxpc3RzIChjb21pbmcgc29vbilcbiovXG5cbmNsYXNzIExpc3Qge1xuICAgIGNvbnN0cnVjdG9yKHRpdGxlKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICAgICAgdGhpcy5jaGVja2VkID0gZmFsc2U7XG4gICAgfTtcblxuICAgIHN1Ymxpc3RzID0gW11cblxuICAgIGFkZFN1Ymxpc3QgKGRlc2MsIHRpbWUsIGR1cmF0aW9uKSB7XG4gICAgICAgIGNvbnN0IHN1Ymxpc3QgPSBuZXcgU3VibGlzdChkZXNjLCB0aW1lLCBkdXJhdGlvbik7XG4gICAgICAgIHRoaXMuc3VibGlzdHMucHVzaChzdWJsaXN0KTtcbiAgICB9O1xufTtcblxuY2xhc3MgU3VibGlzdCB7XG4gICAgY29uc3RydWN0b3IoZGVzYywgdGltZSwgZHVyYXRpb24pIHtcbiAgICAgICAgdGhpcy5kZXNjID0gZGVzYztcbiAgICAgICAgdGhpcy50aW1lID0gdGltZTtcbiAgICAgICAgdGhpcy5kdXJhdGlvbiA9IGR1cmF0aW9uO1xuICAgICAgICB0aGlzLmNoZWNrZWQgPSBmYWxzZTtcbiAgICB9O1xufTsiLCJpbXBvcnQge2luc2VydFNpZGVCYXJ9IGZyb20gJy4vMC1zaWRlYmFyL3NpZGViYXIuanMnO1xuaW1wb3J0IHtpbnNlcnRMaXN0c1dyYXBwZXJ9IGZyb20gJy4vMS1saXN0cy13cmFwcGVyLzAwLWxpc3RzLXdyYXBwZXIuanMnO1xuXG5jb25zdCBpbnNlcnRNYWluID0gKCkgPT4ge1xuICAgIGNvbnN0IG1haW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdtYWluJyk7XG4gICAgaW5zZXJ0U2lkZUJhcihtYWluKTtcbiAgICBpbnNlcnRMaXN0c1dyYXBwZXIobWFpbik7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtYWluKTtcbn07XG5cbmV4cG9ydCB7aW5zZXJ0TWFpbn07IiwiaW1wb3J0IHtpbnNlcnRMaXN0fSBmcm9tICcuLzEwLWxpc3QuanMnO1xuXG5jb25zdCBpbnNlcnRMaXN0c1dyYXBwZXIgPSBwYXJlbnQgPT4ge1xuICAgIGNvbnN0IGxpc3RzV3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGxpc3RzV3JhcHBlci5jbGFzc0xpc3QuYWRkKCdsaXN0cy13cmFwcGVyJyk7XG4gICAgaW5zZXJ0TGlzdChsaXN0c1dyYXBwZXIpO1xuICAgIHBhcmVudC5hcHBlbmRDaGlsZChsaXN0c1dyYXBwZXIpO1xufTtcblxuZXhwb3J0IHtpbnNlcnRMaXN0c1dyYXBwZXJ9OyIsImltcG9ydCB7aW5zZXJ0TGlzdH0gZnJvbSAnLi4vZG9tL21haW4vMS1saXN0cy13cmFwcGVyLzEwLWxpc3QuanMnO1xuXG5jb25zdCBhZGRMaXN0ID0gKCkgPT4ge1xuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtbGlzdC1idG4nKTtcbiAgICBjb25zdCBsaXN0c1dyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGlzdHMtd3JhcHBlcicpO1xuICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IGluc2VydExpc3QobGlzdHNXcmFwcGVyKSk7XG59XG5cbmV4cG9ydCB7YWRkTGlzdH07Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInJlcGxhY2UiLCJwIiwiaW5zZXJ0VG9kYXlJY29uIiwicGFyZW50IiwiaW1nIiwiSW1hZ2UiLCJjYWxlbmRhciIsImluc2VydFRvZGF5VGV4dCIsImgyIiwiaW5uZXJUZXh0IiwiaW5zZXJ0VG9tb3Jyb3dJY29uIiwiaW5zZXJ0VG9tb3Jyb3dUZXh0IiwibGlzdERlbEJ0bkV2ZW50IiwicGF0aCIsInN1Ymxpc3RDaGVja21hcmtFdmVudCIsImNoZWNrbWFyayIsInN1Ymxpc3REZXNjIiwiY2hpbGRyZW4iLCJzdWJsaXN0VGltZSIsInN1Ymxpc3REdXJhdGlvbiIsImRvbUNoYW5nZSIsImRlc2MiLCJ0aW1lIiwiZHVyYXRpb24iLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJpbnNlcnRTdWJsaXN0V3JhcHBlciIsInN1Ymxpc3RXcmFwcGVyIiwiYWRkIiwiaW5zZXJ0U3VibGlzdENoZWNrbWFyayIsImluc2VydFN1Ymxpc3REZXNjIiwiaW5zZXJ0U3VibGlzdFRpbWUiLCJpbnNlcnRTdWJsaXN0RHVyYXRpb24iLCJpbnNlcnREZWxCdG4iLCJidG4iLCJpbm5lckhUTUwiLCJhZGRFdmVudExpc3RlbmVyIiwiYWRkU3VibGlzdEJ0bkV2ZW50IiwicGFyZW50TGlzdCIsImxpc3RDaGVja21hcmtFdmVudCIsImxpc3RUaXRsZSIsImRvbUNoYW5nZUxpc3QiLCJkb21DaGFuZ2VTdWJsaXN0Iiwic3VibGlzdCIsImNvbnRhaW5zIiwiaW5zZXJ0TGlzdCIsImxpc3RIZWFkZXIiLCJpbnNlcnRMaXN0Q2hlY2ttYXJrIiwiaDEiLCJpbnNlcnRMaXN0VGl0bGUiLCJpbnNlcnRBZGRTdWJsaXN0QnRuIiwiaW5zZXJ0TGlzdEhlYWRlciIsImhlYWRlciIsInRpdGxlIiwiaW5zZXJ0VGl0bGUiLCJkYXRlIiwiaW5zZXJ0RGF0ZSIsImJvZHkiLCJpbnNlcnRIZWFkZXIiLCJtYWluIiwic2lkZWJhciIsInRvZGF5V3JhcHBlciIsImluc2VydFRvZGF5V3JhcHBlciIsInRvbVdyYXBwZXIiLCJpbnNlcnRUb21XcmFwcGVyIiwiaW5zZXJ0QWRkTGlzdEJ0biIsImluc2VydFNpZGVCYXIiLCJsaXN0c1dyYXBwZXIiLCJpbnNlcnRMaXN0c1dyYXBwZXIiLCJpbnNlcnRNYWluIiwiYWRkTGlzdCJdLCJzb3VyY2VSb290IjoiIn0=